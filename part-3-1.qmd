# CVPDC Housing Market Assessment {#part-3-1}

```{r}

# THINGS TO UPDATE ----------

# ECONOMIC


# Add LEHD data -- maybe total regional commute inflow/outflow?
# See lehd examples in sandbox repo

# I don't think this got committed in the sandbox repo? I couldn't find it.


# HOUSING STOCK


# Add ACS vacancy status/reason (B25004, 2010-2021) -- split into 3 plots?
# 1. Total units for rent and rented, not occupied
# 2. Total units for sale only or sold, not occupied
# 3. Total units for seasonal, for migrant workers, or other vacant (not split by tenure)

# above plots should be reviewed - I used the vacancy status of for rent/rented and for sale/sold to create vacancy rates for those; And then created a different plot for just seasonal/other vacant

# Manufactured home communities
# - Describe locations and distribution across region

# - Update map to style used here https://hdadvisors.github.io/rrh-framework/part-2-4.html#manufactured-home-communities

# I couldn't get the ggplot map to work because I can't figure out the limit bounds on the x and y axis. 

# Age of manufactured homes -- use PUMS to show pre/post-1976 (low priority) - I did not do this.

# HOMEOWNERSHIP

# Emailed Meredith again - waiting on response 

# Add specific home market data pending transaction-level MLS data
# - Sales prices
# - Closings
# - Days on market
# - New build vs resale prices (and by bedrooms, sqft)

# Add HMDA data (low priority, but in our proposal)

# RENTAL

# Add single-family rent estimates from ACS by county

# I doesn't know what ACS table this is??

# Add supply of affordable rental units (NHPD) and HCVs (HUD)
# - Recreate parts of https://hdadvisors.github.io/rrh-framework/part-2-3.html

```

The following provides a regional-level analysis of major trends impacting housing within Central Virginia Planning District region. All data has been aggregated to the regional-level and includes:

- Amherst County
- Appomattox County
- Bedford County
- Campbell County
- City of Lynchburg

```{r}
#| label: setup

# Load necessary libraries.

library(tidyverse)
library(tidycensus)
library(janitor)
library(scales)
library(tigris)
library(sf)
library(glue)
library(httr)
library(readxl)
library(hdatools)
library(ggiraph)
library(tidytext)
library(ggpattern)
library(zoo)

# Create a vector of FIPS codes of the region in order to easily pull localities from data sets.

cv <- c("51009", "51011", "51019", "51031", "51680", "51515") # CVPDC FIPS codes


cnty_code <- c("009", "011", "019", "031", "515", "680")


```

```{r}
#| label: geo-setup
#| eval: false

library(mapboxapi)
library(tigris)
library(ggspatial)

sf_use_s2(TRUE)

options(tigris_use_cache = TRUE)


cv_boundary <- counties("VA") |> 
  filter(GEOID %in% cv)

cv_basemap <- layer_static_mapbox(
  location = cv_boundary,
  style_id = "light-v10",
  username = "mapbox"
  )

write_rds(cv_basemap, "data/cv_basemap.rds")

write_rds(cv_boundary, "data/cv_boundary.rds")

```


## Takeaways

- Population growth as a result of domestic migration due to COVID-19 pandemic
- Growing renter population --- particularly a growing higher income renter population 
- More and more smaller households coming to the region 
- Continuing income disparities --- between white and Black households
- Loss of smaller sized housing
- Major home price increases and rental vacancy declines due to COVID-19
- Affordability challenges hitting people of color, renters, and those living alone the most

## Population trends

### Total population

From 2010 to 2020, the Lynchburg region only grew by six percent, an increase of just over 15,000 people. This slow but steady growth across the last decade was punctuated by a slight decrease in population between 2019 and 2020. In more recent years, the population has recovered to its 2019 estimate, now having an estimated population of 263,613 as of 2022.

```{r}
#| label: pop-data
#| eval: false

# Get population estimates from the Population Estimates Program (PEP) from 2010 to 2019. 2021 data are set to be released in March 2023. 

pep_total_raw <- get_estimates( 
  geography = "county",
  state = "VA",
  variables = "POP",
  year = 2019,
  time_series = TRUE
)

pep_2020s <- get_estimates( 
  geography = "county",
  state = "VA",
  variables = "POPESTIMATE",
  year = 2022,
  time_series = TRUE
) |> 
  filter(year != 2020) |> 
  mutate(counttype = "Population estimate") |> 
  select(GEOID, year, counttype, value)

# Get decennial Census estimates.

census_raw <- get_decennial( 
  geography = "county",
  state = "VA",
  year = 2020,
  sumfile = "pl",
  variables = "P1_001N"
) 

pep_total_clean <- pep_total_raw |>
  filter(!DATE %in% c(2, 3)) |> # Remove non-decennial 2010 counts
  mutate(year = # Translate date codes into years
    case_when(
      DATE == 1 ~ "2010",
      DATE == 4 ~ "2011",
      DATE == 5 ~ "2012",
      DATE == 6 ~ "2013",
      DATE == 7 ~ "2014",
      DATE == 8 ~ "2015",
      DATE == 9 ~ "2016",
      DATE == 10 ~ "2017",
      DATE == 11 ~ "2018",
      DATE == 12 ~ "2019")) |>
  mutate(counttype = # Add descriptions to count types
      case_when(
        DATE == 1 ~ "Census population",
        TRUE ~ "Population estimate")) |> 
  select( # Simplify columns
    GEOID,
    year,
    counttype,
    value
  )

# Prep total population counts from 2020 Census summary file

census_clean <- census_raw |> 
  mutate(year = "2020", # Add year and count type columns
         counttype = "Census population") |> 
  select( # Simplify columns
    GEOID,
    year,
    counttype,
    value
  )

population_data <- rbind(pep_total_clean, census_clean, pep_2020s) |> 
  subset(GEOID %in% cv)

write_rds(population_data, "data/pop_data.rds")

```

```{r}
#| label: fig-pop
#| fig-cap: "Total population of CVPDC region"

# Read in saved data and aggregate to the regional level.

cv_pop <- read_rds("data/pop_data.rds") |> 
  group_by(year, counttype) |> # Group by year and the count type.
  summarise(value = sum(value)) # Sum the values.

# Create bar chart showing the change in population from 2010 to 2020

pop_bar <- ggplot(cv_pop, # Read in the data.
                  aes(x = year, # Plot the x-axis.
                      y = value, # Plot the y-axis.
                      fill = value, # Set the variable that will be colored.
                      data_id = value, # Set the variable that will be used in interactive plot.
                      tooltip = label_comma()(value))) + # Set the format of the data label on hover.
  geom_col() + # Set as a bar chart. 
  geom_col_interactive(size = 2) + # Add interactive geometry for ggiraph widget.
  theme_hfv() + # Apply custom HFV theme.
  add_zero_line("y") + # Add darker zero intercept line for emphasis.
  scale_fill_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  labs(title = "Total population of CVPDC region",
       subtitle = "From 2010 to 2020",
       caption = "**Source:** U.S. Census Bureau, Population Estimates Program (PEP).") +
  scale_y_continuous(label = label_comma()) # Format the y-axis to show commas.

# Use custom function from hdatools package to render the plot as a dynamic ggiraph widget for HTML outputs; regular image for all other formats.
  
publish_plot(pop_bar)

```

For much of the last decade, growth in the region has been a result of both domestic migration and international migration. But from 2020 to 2021, there were significant shifts in the causes of population change in the region. Deaths outpaced births during this time, leading to a loss of over 600 individuals. International migration decreased, while domestic migration overwhelmingly became the reason for growth in the region.

These changes within the region were no doubt a result of the COVID-19 pandemic's impact. With the increase in work-from-home (WFH), households from outside the region saw an opportunity to benefit from the relative affordability of the region, while still earning high wages from elsewhere. And sadly, the pandemic's impact also contributed to losses among the community. 

Recent changes in the population from 2020 to 2022 have shown the overwhelming impact of domestic migration to the region. The natural decreases post-2020 have been substantial for the region, resulting in a loss of 1,100 residents from 2020 to 2022.

```{r}
#| label: components-data
#| eval: false


pep_change_raw <- get_estimates(
  geography = "county",
  state = "VA",
  year = 2019,
  variables = c("NATURALINC", "DOMESTICMIG", "INTERNATIONALMIG"),
  time_series = TRUE
)

change_2020s <- get_estimates(
  geography = "county",
  state = "VA",
  year = 2022,
  variables = c("NATURALCHG", "DOMESTICMIG", "INTERNATIONALMIG"),
  time_series = TRUE
) |> 
  mutate(component = case_when(
      variable == "NATURALCHG" ~ "Natural increase",
      variable == "DOMESTICMIG" ~ "Domestic migration",
      variable == "INTERNATIONALMIG" ~ "International migration")) |>  
  select( # Simplify columns
    GEOID,
    year,
    component,
    value
  )

pep_change_clean <- pep_change_raw |>  
  mutate(GEOID = as.character(GEOID)) |>  
  filter(GEOID %in% cv) |> 
  mutate(year = # Translate date codes into years
    case_when(
      PERIOD == 1 ~ "2010",
      PERIOD == 2 ~ "2011",
      PERIOD == 3 ~ "2012",
      PERIOD == 4 ~ "2013",
      PERIOD == 5 ~ "2014",
      PERIOD == 6 ~ "2015",
      PERIOD == 7 ~ "2016",
      PERIOD == 8 ~ "2017",
      PERIOD == 9 ~ "2018",
      PERIOD == 10 ~ "2019")) |> 
  mutate(component = # Rename components of change
    case_when(
      variable == "NATURALINC" ~ "Natural increase",
      variable == "DOMESTICMIG" ~ "Domestic migration",
      variable == "INTERNATIONALMIG" ~ "International migration")) |>  
  select( # Simplify columns
    GEOID,
    year,
    component,
    value
  )

cv_comp_change <- pep_change_clean |> 
  rbind(change_2020s) |>
  filter(GEOID %in% cv) |>
  left_join(counties("VA", year = 2021), by = "GEOID") |>
  select(NAMELSAD, year, component, value)

write_rds(cv_comp_change, "data/comp_data.rds")

```

```{r}
#| label: fig-pchange
#| fig-cap: "Components of population change"

# Read in saved data. 

cv_comp_change <- read_rds("data/comp_data.rds")

# Aggregate data to the regional level.

cv_change <- cv_comp_change |> 
  group_by(year, component) |> # Group by year and component of change.
  summarise(value = sum(value)) # Sum values.

cv_change_plot <- ggplot(cv_change,
       aes(x = year,
           y = value,
           fill = component,
           data_id = value,
           tooltip = label_number(big.mark = ",", style_positive = "plus", style_negative = "minus")(value))) +
  geom_col(position = "stack") +
  geom_col_interactive(size = 2) +
  theme_hfv() +
  add_zero_line("y") +
  scale_fill_hfv() + 
  labs(title = "Components of population change",
       subtitle = "Net domestic migration, international migration, and natural increase (or decrease)",
       caption = "**Source:** U.S. Census Bureau, Population Estimates Program.<br>**Note:** Natural increase (or decrease) defined as births minus deaths.") +
  theme(legend.position = "bottom") +
  scale_y_continuous(labels = label_number(big.mark = ",", style_positive = "plus", style_negative = "minus"))
  
publish_plot(cv_change_plot)

# girafe(ggobj = cv_change_plot)

```
### Population projections

Despite the slight population decline from from 2019 to 2020 and the slow growth in recent years, the region is projected to near 300,000 people by 2050 --- a 13 percent increase from the 2020 Census.

```{r}
#| label: fig-projections
#| fig-cap: "Projected total population"

# Read in saved UVA Projections data.

projections <- read_csv("data/uva_proj.csv") |> 
  subset(FIPS %in% cv) |> # Filter for Lynchburg metro localities
  select(FIPS, NAME, `2030`,`2040`, `2050`) |>  # Select only necessary variables
  pivot_longer(3:5, # Choose which columns to pivot
               names_to = "year", # Name the variable
               values_to = "projection") # Name the data value


dec_2020 <- c("2020", 261593) # 2020 Decennial Census for context.

# Aggregate the data to the region. 

cv_proj <- projections |> 
  group_by(year) |> 
  summarise(count = sum(projection)) |> 
  rbind(dec_2020) |> # Add 2020 Decennial Census data to data frame.
  arrange(year) # Arrange in ascending year order to visualize properly. 

cv_proj$type <- c("Census count", "Projection", "Projection", "Projection") # Add column to describe count type.

cv_proj <- cv_proj |> 
  transform(count = as.numeric(count)) 

cv_proj_plot <- ggplot(cv_proj,
       aes(x = year,
           y = count,
           fill = type,
           data_id = count,
           tooltip = label_number(big.mark = ",")(count))) +
  geom_col() + 
  geom_col_interactive() +
  theme_hfv() + 
  add_zero_line("y") +
  scale_fill_hfv() +
  labs(title = "Projected total population",
       subtitle = "2030, 2040, and 2050 projections",
       caption = "**Source:** University of Virginia, Weldon Cooper Center.") +
  scale_y_continuous(labels = label_comma())

publish_plot(cv_proj_plot)

```

## Household trends

### Household tenure

From 2010 to 2021, there has been a continuous increase in the number of renter households in the region. Cumulatively, there has been an increase of 3,226 renters since 2010. Although, there has been a cumulative increase in the number of homeowner households since 2010 --- that increase is only recent as of 2020 and 2021. 

```{r}
#| label: tenure-data
#| eval: false

# Table B25003: Households by Tenure

years <- 2010:2021

b25003_vars <- load_variables(2021, "acs5") |> 
  filter(str_sub(name, end = 6) %in% "B25003") |> 
  filter(str_length(name) < 11)

b25003_raw <- map_dfr(years, function(yr){
  b25003_pull <- get_acs(
    geography = "county",
    state = "VA",
    table = "B25003",
    year = yr,
    survey = "acs5",
    cache_table = TRUE
  ) |> 
    mutate(year = yr)
})

b25003_raw <- b25003_raw |> 
  subset(GEOID %in% cv)


b25003_vars_cleaned <- b25003_vars |> 
  separate(label, into = c("est", "total", "tenure"), sep = "!!") |> 
  select(variable = name, tenure) |>
  drop_na() |>
  mutate(tenure = case_when(
    tenure == "Owner occupied" ~ "Homeowner",
    tenure == "Renter occupied" ~ "Renter"
  ))

b25003_data <- b25003_raw |> 
  right_join(b25003_vars_cleaned, by = "variable") |> 
  select(NAME, GEOID, year, tenure, estimate, moe) |> 
  mutate(NAME = str_remove_all(NAME, ", Virginia"),
         NAME = case_when(
           NAME == "Bedford city" ~ "Bedford County", # Aggregate Bedford City and Bedford County
           TRUE ~ NAME
         ))

write_rds(b25003_data, "data/b25003_data.rds")

```

```{r}
#| label: fig-tenure
#| fig-cap: "Cumulative change in households by tenure"

# Read in saved data. 

b25003_data <- read_rds("data/b25003_data.rds") 

# Aggregate data and conduct analysis to identify the cumulative change.

cv_tenure <- b25003_data |> 
  group_by(year, tenure) |> # Group by year and tenure to aggregate to region.
  summarise(estimate = sum(estimate)) |> # Summarize data for the aggregation.
  group_by(tenure) |> 
  mutate(diff = estimate - lag(estimate),
         diff = replace_na(diff, 0)) |> 
  mutate(run_diff = cumsum(diff)) |>  
  filter(run_diff != 0) |> 
  mutate(year = as.character(year))

cv_tenure_plot <- ggplot(cv_tenure,
       aes(x = year, 
           y = run_diff,
           fill = tenure,
           data_id = run_diff,
           tooltip = label_number(big.mark = ",", style_positive = "plus", style_negative = "minus")(run_diff))) +
  geom_col() +
  geom_col_interactive(size = 2) +
  facet_wrap(~tenure) +
  theme_hfv() +
  add_zero_line("y") +
  scale_fill_hfv() +
  scale_y_continuous(labels = label_number(big.mark = ",", style_positive = "plus", style_negative = "minus")) +
  theme(axis.text.x = element_text(angle = 90, vjust = .2)) +
  labs(title = "Cumulative change in households by tenure", 
       subtitle = "From 2010 to 2021",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, 5-year estimates, Table B25003.")

publish_plot(cv_tenure_plot)

```

### Householder age

The growing number of homeowners in the region are overwhelmingly the result of seniors (65 years and over). Between 2010 and 2021, there was an increase of 5,796 senior homeowners. The growth in homeowners was offset by major decreases in homeowners aged between 25 and 64 years old --- an overall decrease of 5,180. Renter households saw increases across all age groups, but the greatest increase was among 45 to 64 year olds (+1,323).

```{r}
#| label: age
#| eval: false

# Table B25007: Tenure by Age of Householder

b25007_vars <- load_variables(2021, "acs5") |>
  filter(str_sub(name, end = 6) %in% "B25007")

b25007_raw <- map_dfr(years, function(yr){
  b25007_pull <- get_acs(
    geography = "county",
    state = "VA",
    table = "B25007",
    year = yr,
    survey = "acs5",
    cache_table = TRUE
  ) |>
    mutate(year = yr)
})

b25007_raw <- b25007_raw |>
  subset(GEOID %in% cv)

b25007_vars_cleaned <- b25007_vars |>
  separate(label, into = c("est", "total", "tenure", "age"), sep = "!!") |>
  select(variable = name, tenure, age) |>
  drop_na() |>
  mutate(tenure = case_when(
    tenure == "Owner occupied:" ~ "Homeowner",
    tenure == "Renter occupied:" ~ "Renter"
  ))

b25007_data <- b25007_raw |>
  right_join(b25007_vars_cleaned, by = "variable") |> 
  select(NAME, GEOID, year, tenure, age, estimate, moe) |> 
  mutate(NAME = str_remove_all(NAME, ", Virginia"),
         NAME = case_when(
           NAME == "Bedford city" ~ "Bedford County", # Aggregate Bedford City and Bedford County
           TRUE ~ NAME),
         age = case_when(
    age == "Householder 15 to 24 years" ~ "24 years and under",
    age == "Householder 25 to 34 years" ~ "25 to 44 years old",
    age == "Householder 35 to 44 years" ~ "25 to 44 years old",
    age == "Householder 45 to 54 years" ~ "45 to 64 years old",
    age == "Householder 55 to 59 years" ~ "45 to 64 years old",
    age == "Householder 60 to 64 years" ~ "45 to 64 years old",
    age == "Householder 65 to 74 years" ~ "65 years and over",
    age == "Householder 75 to 84 years" ~ "65 years and over",
    age == "Householder 85 years and over" ~ "65 years and over"
  ))

write_rds(b25007_data, "data/b25007_data.rds")

```

```{r}
#| label: fig-age
#| fig-cap: "Change in households by age and tenure"

b25007_data <- read_rds("data/b25007_data.rds")

cv_age <- b25007_data |> 
  group_by(NAME, year, tenure, age) |> 
  summarise(estimate = sum(estimate)) |> 
  pivot_wider(names_from = year,
              values_from = estimate) |> 
  select(tenure, age, `2010`, `2021`) |> 
  transform(change = `2021` - `2010`) |> 
  group_by(NAME, tenure, age) |> 
  summarise(change = sum(change)) |> 
  mutate(age = fct_relevel(age, "Under 25 years old")) |> 
  group_by(tenure, age) |> 
  summarise(change = sum(change))

cv_age_plot <- ggplot(cv_age,
       aes(x = tenure, 
           y = change,
           fill = tenure,
           data_id = change,
           tooltip = label_number(big.mark = ",", style_positive = "plus", style_negative = "minus")(change)))  +
  facet_wrap(~age, nrow =1) +
  geom_col(position = "dodge") +
  geom_col_interactive(size = 2) +
  theme_hfv() +
  add_zero_line("y") +
  scale_fill_hfv() +
  scale_y_continuous(labels = label_number(big.mark = ",", style_positive = "plus", style_negative = "minus")) +
  theme(axis.text.x = element_blank(),
        legend.position = "bottom") +
  labs(title = "Change in households by age and tenure",
       subtitle = "From 2010 to 2021",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, 5-year estimates, Table B25007.")

publish_plot(cv_age_plot)

```

### Household types

Among household types, householders not living alone grew by 1,430 from 2010 to 2021 --- more than any other household type. This household type mostly represents households with unrelated household members (i.e. living with roommates). Household types like this are expected in regions with major universities, but they can also be an indicator of affordability challenges as individuals increasingly need additional household members to contribute to rent or mortgages.

Householders living alone follow at an increase of 1,133. Household formation continues to be delayed among many individuals --- contributing to the growing number of one-person households. But in the Lynchburg region, married couple households follow closely behind with an increase of 1,059 since 2010.

```{r}
#| label: hhtype-data
#| eval: false

# Table B11001: Household type (including Living Alone)

b11001_vars <- load_variables(2021, "acs5") |> 
  filter(str_sub(name, end = 7) %in% "B11001_")

b11001_raw <- map_dfr(years, function(yr){
  b11001_pull <- get_acs(
    geography = "county",
    state = "VA",
    table = "B11001",
    year = yr,
    survey = "acs5",
    cache_table = TRUE
  ) |>
    mutate(year = yr)
})

b11001_raw <- b11001_raw |> 
  subset(GEOID %in% cv)

b11001_vars_cleaned <- b11001_vars |> 
  separate(label, into = c("est", "tot", "type", "relationship", "householder"),
           sep = "!!") |>
  select(variable = name, type, relationship, householder) |> 
  mutate(
    householder = case_when(
      relationship == "Married-couple family" ~ relationship,
      relationship == "Householder living alone" ~ relationship,
      relationship == "Householder not living alone" ~ relationship,
      TRUE ~ householder),
    relationship = case_when(
      relationship == "Householder living alone" ~ type,
      relationship == "Householder not living alone" ~ type,
      TRUE ~ relationship)
    ) |> 
  mutate(across(.fns = ~str_remove_all(.x, ":"))) |> 
  drop_na()

b11001_data <- b11001_raw |>
  right_join(b11001_vars_cleaned, by = "variable") |>
  select(NAME, GEOID, year, "hhtype" = householder, relationship, type, estimate) |>
  mutate(NAME = str_remove_all(NAME, ", Virginia"),
          NAME = case_when(
           NAME == "Bedford city" ~ "Bedford County", # Aggregate Bedford City and Bedford County
           TRUE ~ NAME))

write_rds(b11001_data, "data/b11001_data.rds")

```

```{r}
#| label: fig-hhtype
#| fig-cap: "Change in households by type"

b11001_data <- read_rds("data/b11001_data.rds")

cv_hhtype <- b11001_data |> 
  group_by(year, hhtype) |> 
  summarise(estimate = sum(estimate)) |> 
  pivot_wider(names_from = year,
              values_from = estimate) |> 
  select(hhtype, `2010`, `2021`) |> 
  transform(change = `2021` - `2010`) 

cv_hhtype_plot <-ggplot(cv_hhtype,
       aes(x = reorder(hhtype, change),
           y = change,
           fill = hhtype,
           data_id = change,
           tooltip = label_number(big.mark = ",", style_negative = "minus", style_positive = "plus")(change))) +
  geom_col() + 
  geom_col_interactive() +
  theme_hfv() +
  add_zero_line("y") +
  scale_fill_hfv() +
  scale_y_continuous(labels = label_number(big.mark = ",", style_negative = "minus", style_positive = "plus")) + 
   scale_x_discrete(labels = function(x) str_wrap(x, width = 16)) +
  labs(title = "Change in households by type",
       subtitle = "From 2010 to 2021",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, 5-year estimates, Table B11001.")

publish_plot(cv_hhtype_plot)

```

The region saw its greatest gains among households --- both homeowners and renters --- with two people or less. Two-person renter households saw the most growth between 2010 and 2021, increasing by 2,409. Household with three or more people only grew slightly, but three-person homeowner households actually saw a decline (-1,642). 

```{r}
#| label: hhsize-data
#| eval: false

# Table B25009: Household size by tenure

b25009_vars <- load_variables(2021, "acs5") |> 
  filter(str_sub(name, end = 6) %in% "B25009")

b25009_raw <- map_dfr(years, function(yr){
  b25009_pull <- get_acs(
    geography = "county",
    state = "VA",
    table = "B25009",
    year = yr,
    survey = "acs5",
    cache_table = TRUE
  ) |>
    mutate(year = yr)
})

b25009_raw <- b25009_raw |> 
  subset(GEOID %in% cv)

b25009_vars_cleaned <- b25009_vars |> 
  separate(label, into = c("est", "total", "tenure", "size"), sep = "!!") |> 
  select(variable = name, tenure, size)  |> 
  drop_na() |>
  mutate(tenure = case_when(
    tenure == "Owner occupied:" ~ "Homeowner",
    tenure == "Renter occupied:" ~ "Renter"
  ))

b25009_data <- b25009_raw |> 
  right_join(b25009_vars_cleaned, by = "variable") |> 
  select(NAME, GEOID, year, tenure, size, estimate) |> 
  mutate(NAME = str_remove_all(NAME, ", Virginia"),
         NAME = case_when(
           NAME == "Bedford city" ~ "Bedford County", # Aggregate Bedford City and Bedford County
           TRUE ~ NAME)) |> 
  mutate(size = case_when(
    size == "1-person household" ~ "1-person",
    size == "2-person household" ~ "2-person",
    size == "3-person household" ~ "3-person",
    TRUE ~ "4 or more persons"
  )) 

write_rds(b25009_data, "data/b25009_data.rds")

```

```{r}
#| label: fig-hhsize
#| fig-cap: "Change in households by size and tenure"

b25009_data <- read_rds("data/b25009_data.rds")

cv_hhsize <- b25009_data |> 
  group_by(year, tenure, size) |> 
  summarise(estimate = sum(estimate)) |> 
  pivot_wider(names_from = year,
              values_from = estimate) |> 
  select(tenure, size, `2010`, `2021`) |> 
  transform(change = `2021` - `2010`) 
  

cv_hhsize_plot <- ggplot(cv_hhsize,
       aes(x = tenure,
           y = change,
           fill = tenure,
           data_id = change,
           tooltip = label_number(big.mark = ",", style_positive = "plus", style_negative = "minus")(change))) +
  geom_col() +
  geom_col_interactive(size = 2) +
  facet_wrap(~size, nrow = 1) +
  theme_hfv() +
  add_zero_line("y") +
  scale_fill_hfv() +
  labs(title = "Change in households by size and tenure",
       subtitle = "From 2010 to 2021",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, 5-year estimates, Table B25009.") +
  theme(axis.text.x = element_blank(),
        legend.position = "bottom") +
  scale_y_continuous(labels = label_number(big.mark = ",", style_positive = "plus", style_negative = "minus"))
  
publish_plot(cv_hhsize_plot)

```

### Seniors and individuals with disabilities

The senior population grew by 9,021 individuals from 2012 to 2021. Much of that growth occurred among seniors living with family --- mainly as a householder (+3,233) or as the spouse in a family (+3,091). The third largest change in the senior population was among seniors living alone (+2,291). This senior living arrangement can be a concern for communities. With more and more seniors living alone, aging-in-place is made more difficult without support from others. 

```{r}
#| label: hh-seniors-data
#| eval: false

# Table B09020: Senior population by living arrangements

years <- 2012:2021 # 5-year estimates only go back to 2012

b09020_vars <- load_variables(2021, "acs5") |>
  filter(str_sub(name, end = 6) %in% "B09020")

b09020_raw <- map_dfr(years, function(yr){
  b09020_pull <- get_acs(
    geography = "county",
    state = "VA",
    table = "B09020",
    year = yr,
    survey = "acs5"
  ) |>
    mutate(year = yr)
})

b09020_raw <- b09020_raw |>
  subset(GEOID %in% cv)

b09020_vars_cleaned <- b09020_vars |>
  separate(label, into = c("est", "total", "hhgq", "family", "relationship", "sex", "alone"), sep = "!!") |>
  select(variable = name, hhgq, family, relationship, alone) |>
  filter(!variable %in% c("B09020_001", "B09020_002", "B09020_003", "B09020_005", "B09020_006",
                          "B09020_012", "B09020_013", "B09020_014", "B09020_017")) |>
  mutate(relationship = case_when(
    relationship == "Spouse" ~ "With spouse",
    relationship == "Nonrelatives" ~ "With nonrelatives",
    relationship %in% c("Parent", "Parent-in-law", "Other relatives") ~ "With other relative(s)",
    hhgq == "In group quarters" ~ "Group quarters",
    !is.na(alone) ~ alone,
    TRUE ~ relationship
  )) |>
  mutate(family = case_when(
    family == "In family households:" ~ "Family",
    family == "In nonfamily households:" ~ "Nonfamily",
    hhgq == "In group quarters" ~ "Group quarters"
  )) |>
  mutate(across(.fns = ~str_remove_all(.x, ":"))) |>
  select(1,3,4)

b09020_data <- b09020_raw |>
  right_join(b09020_vars_cleaned, by = "variable") |>
  select(NAME, GEOID, year, family, relationship, estimate) |>
  mutate(NAME = str_remove_all(NAME, ", Virginia"),
         NAME = case_when(
           NAME == "Bedford city" ~ "Bedford County", # Aggregate Bedford City and Bedford County
           TRUE ~ NAME))
  
write_rds(b09020_data, "data/b09020_data.rds")

```

```{r}
#| label: fig-seniors
#| fig-cap: "Change in senior population by living arrangement"

b09020_data <- read_rds("data/b09020_data.rds")

cv_seniors <- b09020_data |> 
  group_by(year, family, relationship) |> 
  summarise(estimate = sum(estimate)) |> 
  pivot_wider(names_from = year,
              values_from = estimate) |> 
  transform(change = `2021` - `2012`) |> 
  mutate(family = str_replace(family, "Group quarters", " "),
         family = fct_relevel(family, "Family", "Nonfamily", " "))

cv_seniors_plot <- ggplot(cv_seniors,
       aes(y = reorder_within(relationship, change, family),
           x = change,
           fill = family,
           data_id = change,
           tooltip = label_comma()(change))) +
  geom_col(position = "dodge") +
  geom_col_interactive() +
  facet_grid(rows = vars(family), scales = "free_y", space = "free", switch = "y") +
  scale_y_reordered() +
  theme_hfv() +
  add_zero_line("x") +
  scale_fill_hfv() +
  labs(title = "Change in senior population by living arrangement",
       subtitle = "From 2012 to 2021",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, 5-year estimates, Table B09020.") +
  theme(strip.placement = "outside",
        strip.text.y = element_text(angle = 0),
        panel.grid.major.y = element_blank(),
        panel.grid.major.x = element_line(color = "#e2e4e3",
                                          size = 0.05),
        plot.title.position = "plot",
        plot.caption.position = "plot"
        ) +
   scale_x_continuous(labels = number_format(big.mark = ",", style_positive = "plus"))

publish_plot(cv_seniors_plot)

```
Ambulatory difficulties (serious difficulty walking or climbing stairs) among adults presents challenges when it comes to accessible and affordable housing. These individuals often need single-story homes that have been retrofitted to make getting around easier. The number of adults with an ambulatory difficulty in the region has declined only slightly over the last decade from 18,264 in 2010 to 17,753 by 2021, a 511 person decrease. 

```{r}
#| label: amb-diff-data
#| eval: false

# B18105 Ambulatory Difficulty

years <- 2012:2021 

b18105_vars <- load_variables(2021, "acs5") |>
  filter(str_sub(name, end = 6) %in% "B18105")

b18105_raw <- map_dfr(years, function(yr){
  b18105_pull <- get_acs(
    geography = "county",
    state = "VA",
    table = "B18105",
    year = yr,
    survey = "acs5"
  ) |>
    mutate(year = yr)
})

b18105_raw <- b18105_raw |>
  subset(GEOID %in% cv)

b18105_vars_clean <- b18105_vars |> 
  separate(label, into = c("est", "total", "sex", "age", "ad"), sep = "!!") |> 
  select(variable = name, sex, age, ad) |> 
  drop_na() |> 
  mutate(across(.fns = ~str_remove_all(.x, ":")))

b18105_data <- b18105_raw  |> 
  right_join(b18105_vars_clean, by = "variable") |> 
  mutate(age_grp = case_when(
    age == "65 to 74 years" ~ "65 years and over",
    age == "75 years and over" ~ "65 years and over",
    TRUE ~ "Under 65 years old"
  )) |> 
  group_by(GEOID, NAME, year, age_grp, ad) |> 
  summarise(estimate = sum(estimate)) |>
  mutate(NAME = str_remove_all(NAME, ", Virginia"),
         NAME = case_when(
           NAME == "Bedford city" ~ "Bedford County", # Aggregate Bedford City and Bedford County
           TRUE ~ NAME
         ))

write_rds(b18105_data, "data/b18105_data.rds")

```

```{r}
#| label: fig-ad
#| fig-cap: "Adults with ambulatory difficulty"

b18105_data <- read_rds("data/b18105_data.rds")

cv_ad <- b18105_data |> 
  group_by(year, age_grp, ad) |> 
  summarise(estimate = sum(estimate)) |> 
  filter(ad == "With an ambulatory difficulty") |> 
  mutate(year = as.character(year))

cvad_plot <- ggplot(cv_ad,
                    aes(x = year,
                        y = estimate,
                        fill = age_grp,
                        data_id = estimate,
                        tooltip = estimate)) +
  geom_col(position = "dodge") +
  geom_col_interactive(position = "dodge") +
  theme_hfv() +
  scale_fill_hfv() +
  guides(fill = guide_legend(reverse = TRUE)) +
  theme(legend.position = "right",
        axis.text.x = element_text(angle = 90, vjust = 0.5)) +
  scale_y_continuous(labels = number_format(big.mark = ",")) + 
  labs(title = "Adults with an ambulatory difficulty",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, 5-year estimates, Table B09020.")
  

publish_plot(cvad_plot)



```

```{r}
#| label: ind-diff-data
#| eval: false

# B18107 Independent Living Difficulty

years <- 2012:2021 

b18107_vars <- load_variables(2021, "acs5") |>
  filter(str_sub(name, end = 6) %in% "B18107")

b18107_raw <- map_dfr(years, function(yr){
  b18107_pull <- get_acs(
    geography = "county",
    state = "VA",
    table = "B18107",
    year = yr,
    survey = "acs5"
  ) |>
    mutate(year = yr)
})

b18107_raw <- b18107_raw |>
  subset(GEOID %in% cv)

b18107_vars_clean <- b18107_vars |> 
  separate(label, into = c("est", "total", "sex", "age", "id"), sep = "!!") |> 
  select(variable = name, sex, age, id) |> 
  drop_na() |> 
  mutate(across(.fns = ~str_remove_all(.x, ":")))

b18107_data <- b18107_raw  |> 
  right_join(b18107_vars_clean, by = "variable") |> 
  mutate(age_grp = case_when(
    age == "65 to 74 years" ~ "65 years and over",
    age == "75 years and over" ~ "65 years and over",
    TRUE ~ "Under 65 years old"
  )) |>
  mutate(NAME = str_remove_all(NAME, ", Virginia"),
         NAME = case_when(
           NAME == "Bedford city" ~ "Bedford County", # Aggregate Bedford City and Bedford County
           TRUE ~ NAME
         )) |> 
  group_by(GEOID, NAME, year, age_grp, id) |> 
  summarise(estimate = sum(estimate))

write_rds(b18107_data, "data/b18107_data.rds")

```
The number of adults with an independent living difficulty has also seen little change over the past 10 years. Although a decline, 
```{r}
#| label: fig-id
#| fig-cap: "Adults with independent difficulty"

b18107_data <- read_rds("data/b18107_data.rds")

cv_id <- b18107_data |> 
  group_by(year, age_grp, id) |> 
  summarise(estimate = sum(estimate)) |> 
  filter(id == "With an independent living difficulty") |> 
  mutate(year = as.character(year))

cvid_plot <- ggplot(cv_id,
                    aes(x = year,
                        y = estimate,
                        fill = age_grp,
                        data_id = estimate,
                        tooltip = estimate)) +
  geom_col(position = "stack") +
  geom_col_interactive(position = "stack") +
  theme_hfv() +
  scale_fill_hfv() +
  guides(fill = guide_legend(reverse = TRUE)) +
  theme(legend.position = "right",
        axis.text.x = element_text(angle = 90, vjust = 0.5)) +
  scale_y_continuous(labels = number_format(big.mark = ",")) + 
  labs(title = "Adults with an independent living difficulty",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, 5-year estimates, Table B09020.")
  

publish_plot(cvad_plot)

# girafe(ggobj = cvid_plot,
#        height_svg = 4)



```
### Subfamilies and multigenerational households

With housing affordability becoming more and more of a challenge for families, some families are forced to live with others. This creates *subfamilies*, which the Census Bureau [defines](https://www.census.gov/glossary/?term=Subfamily) as:

>A married couple (with or without children) or an unmarried parent with one or more never-married children under the age of 18, residing with the householder, but not including the householder's spouse.
>
>When grown children move back to the parental home with their own children under 18 or a spouse, they are considered a subfamily.

Within the Lynchburg region subfamilies are more than likely to be single mothers. But in recent years, the number of single fathers and married couples (both with and without children) living with another family has been on the rise.

```{r}
#| label: hh-subfam-data
#| eval: false

# Table B11013: Subfamily type by presence of own children

years <- 2010:2021

b11013_vars <- load_variables(2021, "acs5") |>
  filter(str_sub(name, end = 6) %in% "B11013")

b11013_raw <- map_dfr(years, function(yr){
  b11013_pull <- get_acs(
    geography = "county",
    state = "VA",
    table = "B11013",
    year = yr,
    survey = "acs5"
  ) |>
    mutate(year = yr)
})

b11013_raw <- b11013_raw |>
  subset(GEOID %in% cv)

b11013_vars_cleaned <- b11013_vars |>
  separate(label, into = c("est", "total", "subfamily", "children"), sep = "!!") |>
  select(variable = name, subfamily, children) |>
  filter(!variable %in% c("B11013_001", "B11013_002")) |>
  mutate(subfamily = case_when(
    subfamily == "Married-couple subfamily:" ~ "Married couple",
    subfamily == "Mother-child subfamily" ~ "Single mother",
    subfamily == "Father-child subfamily" ~ "Single father")) |>
  mutate(children = case_when(
    children == "With own children under 18 years" ~ "With children",
    children == "No own children under 18 years" ~ "No children",
    TRUE ~ "With children"))

b11013_data <- b11013_raw |>
  right_join(b11013_vars_cleaned, by = "variable") |>
  select(NAME, GEOID, year, subfamily, children, estimate) |>
  mutate(NAME = str_remove_all(NAME, ", Virginia"),
         NAME = case_when(
           NAME == "Bedford city" ~ "Bedford County", # Aggregate Bedford City and Bedford County
           TRUE ~ NAME))

write_rds(b11013_data, "data/b11013_data.rds")

```

```{r}
#| label: fig-subfam
#| fig-cap: "Subfamilies by type and presence of own children"

b11013_data <- read_rds("data/b11013_data.rds") 

cv_subfam <- b11013_data |> 
  group_by(year, subfamily, children) |>  
  summarise(estimate = sum(estimate)) |> 
  mutate(year = as.character(year))

cv_subfam_plot <- ggplot(cv_subfam,
       aes(x = year,
           y = estimate,
           fill = children,
           data_id = estimate,
           tooltip = label_comma()(estimate))) +
  geom_col(position = "dodge") +
  geom_col_interactive() +
  facet_wrap(~subfamily) +
  theme_hfv() +
  add_zero_line("y") +
  scale_fill_hfv() +
  labs(title = "Subfamilies by type and presence of own children",
       subtitle = "From 2010 to 2021",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, 5-year estimates, Table B11013.") +
  theme(legend.position = "bottom",
        axis.text.x = element_text(angle = 90, vjust = .2))

publish_plot(cv_subfam_plot)

```

While more and more families are living with other families, the number of multigenerational households has also increased in recent years --- especially within Lynchburg and Campbell County, where the percentage of the population living in multigenerational households increased 2.4 percentage points from 2016 (5.5 percent) to 2020 (7.9 percent).

```{r} 
#| label: hh-multigen-data
#| eval: false

library(sf)
# Load PUMA geographies for Virginia
pumas <- pumas(state = "VA")

# Filter PUMAs to Virginia Region 2000 (North and South)

pumas_cv <- pumas |>
  filter(str_detect(NAMELSAD10, "Lynchburg|Bedford"))

# Pull each PUMS year separately because data structure is not same across 2016 to 2020

multigen_2016 <- get_pums(
  variables = "MULTG",
  state = "VA",
  year = 2016,
  puma = pumas_cv$PUMACE10)

multigen_2016 <- multigen_2016 |>
  mutate(YEAR = "2016",
         SPORDER = as.numeric(SPORDER),
         PUMA = case_when(
           str_length(PUMA) == 4 ~ paste0("0", PUMA),
           TRUE ~ as.character(PUMA))) |>
  select(YEAR, SERIALNO, PUMA, SPORDER, WGTP, PWGTP, MULTG)

multigen_2017 <- get_pums(
  variables = "MULTG",
  state = "VA",
  year = 2017,
  puma = pumas_cv$PUMACE10)

multigen_2017 <- multigen_2017 |>
  mutate(SPORDER = as.numeric(SPORDER),
         YEAR = "2017") |>
  select(YEAR, SERIALNO, PUMA, SPORDER, WGTP, PWGTP, MULTG)

multigen_2018 <- get_pums(
  variables = "MULTG",
  state = "VA",
  year = 2018,
  puma = pumas_cv$PUMACE10)

multigen_2018 <- multigen_2018 |>
  mutate(SPORDER = as.numeric(SPORDER),
         YEAR = "2018") |>
  select(YEAR, SERIALNO, PUMA, SPORDER, WGTP, PWGTP, MULTG)

multigen_2019 <- get_pums(
  variables = "MULTG",
  state = "VA",
  year = 2019,
  puma = pumas_cv$PUMACE10)

multigen_2019 <- multigen_2019 |>
  mutate(YEAR = "2019") |>
  select(YEAR, SERIALNO, PUMA, SPORDER, WGTP, PWGTP, MULTG)

multigen_2020 <- get_pums(
  variables = "MULTG",
  state = "VA",
  year = 2020,
  puma = pumas_cv$PUMACE10)

multigen_2020 <- multigen_2020 |>
  mutate(YEAR = "2020") |>
  select(YEAR, SERIALNO, PUMA, SPORDER, WGTP, PWGTP, MULTG)

# Bind years together and recode

multigen_raw <- bind_rows(multigen_2016, multigen_2017, multigen_2018,
                          multigen_2019, multigen_2020) |>
  filter(!MULTG %in% c("b", "0")) |>
  mutate(geography = case_when(
    PUMA == "51096" ~ "Lynchburg city and Campbell County",
    PUMA == "51095" ~ "Amherst, Appomattox, and Bedford Counties"
  )) |> 
  mutate(MULTG = case_when(
    MULTG == "1" ~ "Single generation",
    MULTG == "2" ~ "Multiple generations"
  ))

# Summarize percent of multigenerational households by year
multigen_data <- multigen_raw |>
  group_by(geography, YEAR) |>
  summarise(pct = sum(PWGTP[MULTG == "Multiple generations"]) / sum(PWGTP))|>
  mutate(geography = fct_reorder(geography, pct, .desc = TRUE))

write_rds(multigen_data, "data/multigen_data.rds")

```

```{r}
#| label: fig-multigen
#| fig-cap: "Percent of population living in multiple generation households"

multigen_data <- read_rds("data/multigen_data.rds")

multigen_plot <- ggplot(multigen_data,
       aes(x = YEAR,
           y = pct,
           color = geography,
           group = 1)) +
  geom_line(size = 1) +
  geom_point_interactive(
    aes(data_id = pct,
        tooltip = label_percent(accuracy = 0.1)(pct)),
    size = 1) +
  facet_wrap(~geography, nrow = 1) +
  scale_y_continuous(labels = label_percent(),
                     breaks = c((1:9)/100),
                     limits = c(0,0.09)) +
  labs(title = "Percent of population living in multiple generation households",
       subtitle = "2016 to 2020",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, Public Use Microdata Sample.") +
  scale_color_hfv() +
  theme_hfv() +
  add_zero_line("y") +
  theme(axis.text.x = element_text(angle = 90, vjust = .2))

publish_plot(multigen_plot)

```

While other parts of Virginia are seeing an increasing number of adult children returning home to live with parents, this is not so much the case in the Lynchburg region. Young adults (18 to 34 years old) are increasingly living with a partner in the region, a 38 percent increase between 2015 and 2021. Adults living with their parents only increased by 1.5 percent during this same timeframe.

```{r}
#| label: hh-adultchild-data
#| eval: false

years <- 2015:2021

b09021_vars <- load_variables(2021, "acs5") |>
  filter(str_sub(name, end = 6) %in% "B09021")

b09021_raw <- map_dfr(years, function(yr){
  b09021_pull <- get_acs(
    geography = "county",
    state = "VA",
    table = "B09021",
    year = yr,
    survey = "acs5"
  ) |>
    mutate(year = yr)
})

b09021_raw <- b09021_raw |>
  subset(GEOID %in% cv)

b09021_vars_cleaned <- b09021_vars |>
  filter(name %in% c("B09021_009", "B09021_010", "B09021_011",
                     "B09021_012", "B09021_013", "B09021_014")) |>
  separate(label, into = c("est", "total", "age", "arrangement"), sep = "!!") |>
  select(variable = name, arrangement) |>
  mutate(arrangement = case_when(
    arrangement == "Householder living with spouse or spouse of householder" ~ "With spouse",
    arrangement == "Householder living with unmarried partner or unmarried partner of householder" ~ "With partner",
    TRUE ~ arrangement
  ))

b09021_data <- b09021_raw |>
  right_join(b09021_vars_cleaned, by = "variable") |>
  select(NAME, GEOID, year, arrangement, estimate) |>
  mutate(NAME = str_remove_all(NAME, ", Virginia"),
         NAME = case_when(
           NAME == "Bedford city" ~ "Bedford County", # Aggregate Bedford City and Bedford County
           TRUE ~ NAME)) 


write_rds(b09021_data, "data/b09021_data.rds")
```


```{r}
#| label: fig-adultchild
#| fig-cap: "Percent change in young adult population by living arrangement"

b09021_data <- read_rds("data/b09021_data.rds") 

cv_adultchild <- b09021_data |> 
  group_by(year, arrangement) |> 
  summarise(estimate = sum(estimate)) |> 
  filter(year %in% c(2015, 2021)) |> 
  pivot_wider(names_from = year,
              values_from = estimate) |> 
  mutate(change = `2021` - `2015`,
         pct_change = change/`2015`)

cv_adultchild_plot <- ggplot(cv_adultchild,
       aes(x = reorder(arrangement, pct_change),
           y = pct_change,
           fill = arrangement,
           label = label_percent()(pct_change),
           data_id = pct_change,
           tooltip = label_percent(accuracy = 0.1)(pct_change))) +
  geom_col(position = "dodge") +
  geom_col_interactive(position = "dodge", size = 2) +
  theme_hfv() +
  add_zero_line("y") +
  scale_fill_hfv() +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
  labs(title = "Percent change in young adult population by living arrangement",
       subtitle = "All adults aged 18-34 from 2015 to 2021",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, 5-year estimates, Table B09021.") +
  scale_y_continuous(labels = percent_format())

publish_plot(cv_adultchild_plot)

```

## Economic trends

### Household incomes

In the region, the distribution of homeowner incomes have shifted upwards. A greater share of homeowners are now in the $100,000 and more income range than back in 2010. Renter incomes have also shifted upwards but not as dramatically towards the upper income bands. In 2021, there 5,060 more renter households making between \$50,000 and \$149,999, a 92 percent increase.

Regardless of these shifts, income distributions for renter households continue to skew towards the low end.

```{r}
#| label: hh-inc-data
#| eval: false

years <- 2010:2021

b25118_vars <- load_variables(2021, "acs5") |> 
  filter(str_sub(name, end = 6) %in% "B25118")

b25118_raw <- map_dfr(years, function(yr){
  b25118_pull <- get_acs(
    geography = "county",
    state = "VA",
    table = "B25118",
    year = yr,
    survey = "acs5",
    cache_table = TRUE
  ) |> 
    mutate(year = yr)
  })

b25118_raw <- b25118_raw |> 
  subset(GEOID %in% cv)

b25118_vars_cleaned <- b25118_vars |> 
  separate(label, into = c("est", "total", "tenure", "income"), sep = "!!") |>  
  select(variable = name, tenure, income) |> 
  mutate(tenure = case_when(
    tenure == "Owner occupied:" ~ "Homeowner",
    tenure == "Renter occupied:" ~ "Renter"
  )) |> 
  drop_na()

b25118_data <- b25118_raw |> 
  right_join(b25118_vars_cleaned, by = "variable") |> 
  select(NAME, year, tenure, income, estimate) |> 
  mutate(NAME = str_remove_all(NAME, ", Virginia"),
         NAME = case_when(
           NAME == "Bedford city" ~ "Bedford County", # Aggregate Bedford City and Bedford County
           TRUE ~ NAME)) |>
  mutate(income = case_when(
    income == "Less than $5,000" ~ "Less than $15,000",
    income == "$5,000 to $9,999" ~ "Less than $15,000",
    income == "$10,000 to $14,999" ~ "Less than $15,000",
    income == "$15,000 to $19,999" ~ "$15,000 to $24,999",
    income == "$20,000 to $24,999" ~ "$15,000 to $24,999",
    income == "$25,000 to $34,999" ~ "$25,000 to $49,999",
    income == "$35,000 to $49,999" ~ "$25,000 to $49,999",
    income == "$50,000 to $74,999" ~ "$50,000 to $74,999",
    TRUE ~ income
  ))
  
write_rds(b25118_data, "data/b25118_data.rds")
```

```{r}
#| label: fig-incdist
#| fig-cap: "Households by income and tenure"

b25118_data <- read_rds("data/b25118_data.rds") 

inc_dist <- b25118_data |> 
  group_by(year, tenure, income) |> 
  summarise(estimate = sum(estimate)) |> 
  filter(year == 2010 | year == 2021) |> 
  mutate(year = as.character(year)) |> 
  ungroup()

level_order <- c("Less than $15,000", "$15,000 to $24,999", "$25,000 to $49,999", "$50,000 to $74,999", "$75,000 to $99,999", "$100,000 to $149,999", "$150,000 or more")

inc_dist_plot <- ggplot(inc_dist,
       aes(x = factor(income, level = level_order),
           y = estimate,
           fill = year,
           data_id = estimate,
           tooltip = label_comma()(estimate))) +
  geom_col(position = position_dodge()) +
  geom_col_interactive(size = 1, position = position_dodge()) +
  facet_grid(~tenure) +
  scale_fill_hfv(-1) +
  theme_hfv() +
  add_zero_line("y") +
  theme(axis.text.x = element_text(angle = 90, vjust = .2, size = 8),
        strip.text.y = element_blank(),
        legend.position = "bottom") +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
  scale_y_continuous(labels = label_comma()) +
  labs(title = "Households by income and tenure",
       subtitle = "2010 versus 2021",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, 5-year estimates, Table B25118.") 

publish_plot(inc_dist_plot)

```

Between homeowner and renter households there is a \$35,236 gap in median household income. Adjusting for inflation shows that median household income has been relatively flat for homeowners in the last decade (7 percent increase), while the typical income for renters saw modest gains (18 percent increase).

```{r}
#| label: med-income-msa
#| eval: false

# "metropolitan statistical area/micropolitan statistical area"

years <- 2010:2021 

b25119_vars <- load_variables(2021, "acs5") |> 
  filter(str_sub(name, end = 6) %in% "B25119")

b25119_raw <- map_dfr(years, function(yr){
  b25119_pull <- get_acs(
    geography = "cbsa",
    table = "B25119",
    year = yr,
    survey = "acs5",
    cache_table = TRUE
  ) |>
    mutate(year = yr)
  })  


b25119_msa <- b25119_raw |> 
  filter(NAME == "Lynchburg, VA Metro Area")

b25119_vars_cleaned <- b25119_vars |> 
  separate(label, into = c("est", "income", "total", "tenure"), sep = "!!") |> 
  select(variable = name, tenure) |> 
  mutate(tenure = case_when(
    tenure == "Owner occupied (dollars)" ~ "Homeowner",
    tenure == "Renter occupied (dollars)" ~ "Renter"
  ))

b25119_vars_cleaned$tenure <- b25119_vars_cleaned$tenure |>  
  replace_na('All households')

b25119_data <- b25119_msa |> 
  right_join(b25119_vars_cleaned, by = "variable") |> 
  select(NAME, year, tenure, estimate, moe)

library(readxl)

cpi <- read_excel("data/CPI_U_RS.xlsx")

cpi <- cpi |> 
  rename(year = Year,
         priceindex = Index) |> 
  transform(year = as.numeric(year))

b25119_cpi_msa <- b25119_data |> 
  left_join(cpi, by = 'year') |> 
  transform(dollars21 = ((399/priceindex)*estimate)) |> 
  select(NAME, year, tenure, dollars21, cdollars = estimate) |>
  filter(tenure != "All households") |> 
  select(year, NAME, tenure, dollars21, cdollars)

write_rds(b25119_cpi_msa, "data/b25119_cpi_msa.rds")

```

```{r}
#| label: fig-medinc
#| fig-cap: "Median household income by tenure"

b25119_cpi_msa <- read_rds("data/b25119_cpi_msa.rds") |> 
  pivot_longer(4:5,
               names_to = "value",
               values_to = "estimate") |> 
  mutate(value = case_when(
    value == "dollars21" ~ "Constant 2021 dollars",
    value == "cdollars" ~ "Current dollars"
  ))

med_inc_plot <- ggplot(b25119_cpi_msa,
       aes(x = year,
           y = estimate,
           color = tenure,
           linetype = value)) +
  geom_line(linewidth = .5) +
  geom_point_interactive(
    aes(data_id = estimate,
        tooltip = dollar_format()(estimate)),
    size = 1) +
  facet_wrap(~tenure) +
  theme_hfv() +
  add_zero_line("y") +
  scale_color_hfv() +
  scale_x_continuous(breaks = 2010:2021) +
  scale_y_continuous(labels = dollar_format(),
                     limits = c(0, 73000)) +
  theme(legend.position = "bottom",
        axis.text.x = element_text(angle = 90, vjust = .2, size = 8)) +
  guides(color = "none") +
  labs(title = "Median household income by tenure",
       subtitle = "From 2010 to 2021",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, 5-year estimates, Table B25119.")

publish_plot(med_inc_plot)

```

```{r}
#| label: med-income-county
#| eval: false

years <- 2010:2021 #Including Bedford City, but be mindful that you cannot aggregate medians.

b25119_vars <- load_variables(2021, "acs5") |> 
  filter(str_sub(name, end = 6) %in% "B25119")

b25119_raw <- map_dfr(years, function(yr){
  b25119_pull <- get_acs(
    geography = "county",
    state = "VA",
    table = "B25119",
    year = yr,
    survey = "acs5",
    cache_table = TRUE
  ) |>
    mutate(year = yr)
  })

b25119_raw <- b25119_raw |> 
  subset(GEOID %in% cv)

b25119_vars_cleaned <- b25119_vars |> 
  separate(label, into = c("est", "income", "total", "tenure"), sep = "!!") |>  
  select(variable = name, tenure) |> 
  mutate(tenure = case_when(
    tenure == "Owner occupied (dollars)" ~ "Homeowner",
    tenure == "Renter occupied (dollars)" ~ "Renter"
  ))

b25119_vars_cleaned$tenure <- b25119_vars_cleaned$tenure |>  replace_na('All households')
b25119_data <- b25119_raw |> 
  right_join(b25119_vars_cleaned, by = "variable") |> 
  select(NAME, GEOID, year, tenure, estimate, moe)


cpi <- read_excel("data/CPI_U_RS.xlsx")

cpi <- cpi |> 
  rename(year = Year,
         priceindex = Index) |> 
  transform(year = as.numeric(year))

b25119_cpi <- b25119_data |> 
  left_join(cpi, by = 'year') |> 
  transform(dollars21 = ((399/priceindex)*estimate)) |> 
  select(NAME, GEOID, year, tenure, dollars21, cdollars = estimate) |>
  filter(tenure != "All households") |> 
  select(year, NAME, tenure, dollars21, cdollars)

write_rds(b25119_cpi, "data/b25119_cpi.rds")

```

Gaps in income between different races and ethnicities in the region continue to further racial inequities --- especially in the housing market. Black households in the region make a fraction of what their white counterparts make. For every dollar a typical white household makes, a Black household only makes 62 percent of that dollar.

Hispanic households in the region have made major gains in income. When comparing inflation-adjusted income, Hispanic households in the region saw a 17 percent increase in median household income, the largest gain among any other group.

```{r}
#| label: inc-race-msa
#| eval: false

years <- 2010:2021 

b19013 <- paste0("B19013", LETTERS[2:9])

b19013_defns <- load_variables(2020, "acs5") |>
  filter(str_sub(name, end = 7) %in% b19013) |>
  filter(str_detect(name, "PR") == FALSE)

concept_to_race <- function(x) {
  out <- x |>
    str_remove_all("MEDIAN HOUSEHOLD INCOME IN THE PAST 12 MONTHS \\(\\IN 2020 INFLATION-ADJUSTED DOLLARS\\)\\ \\(|\\)") |>
    str_to_title()
}

b19013_cleaned <- b19013_defns |>
  mutate(race = concept_to_race(concept)) |>
  separate(label, c("estimate", "medhhincome"), sep = "!!") |>
  select(variable = name, medhhincome, race) |>
  mutate(across(.fns = ~replace_na(.x, "All")),
          across(.fns = ~str_remove_all(.x, ":")))

b19013_raw_msa <- map_dfr(b19013, function(tb) {
  yearly_data <- map_dfr(years, function(yr) {
    acs_pull <- get_acs(
      geography = "cbsa",
      table = tb,
      year = yr
    ) |>
    left_join(b19013_cleaned, by = "variable")
    acs_rearranged <- acs_pull |>
      mutate(year = yr) |>
      select(variable, year, NAME, GEOID, race, medhhincome,
             estimate, moe)
    acs_rearranged
  })
  yearly_data
}) |> 
  filter(NAME == "Lynchburg, VA Metro Area")

cpi <- read_excel("data/CPI_U_RS.xlsx") |> 
  rename(year = Year,
         priceindex = Index) |> 
  transform(year = as.numeric(year))

b19013_msa <- b19013_raw_msa |> 
  mutate(across(.fns = ~str_remove_all(.x, "Alone Householder")),
         across(.fns = ~trimws(.x))) |> 
  select(year, NAME, race, estimate, moe) |> 
  transform(year = as.numeric(year),
            estimate = as.numeric(estimate))|> 
  left_join(cpi, by = 'year')|> 
  select(year, NAME, race, estimate, moe, priceindex) |> 
  transform(dollars21 = ((399/priceindex)*estimate)) |> 
  mutate(race = case_when(
    race == "Black Or African American" ~ "Black",
    race == "Two Or More Races Householder" ~ "Multiracial",
    race == "White Alone, Not Hispanic Or Latino Householder" ~ "White, non-Hispanic",
    race == "Hispanic Or Latino Householder" ~ "Hispanic or Latino",
    TRUE ~ race
  )) |> 
  filter(race %in% c("White, non-Hispanic", "Black", "Asian", "Multiracial", "Hispanic or Latino"))

write_rds(b19013_msa, "data/b19013_msa.rds")
```

```{r}
#| label: fig-inc-race-msa
#| fig-cap: "Median household income by race and ethnicity"

b19013_msa <- read_rds("data/b19013_msa.rds") |> 
  select(NAME, year, race, cdollars = estimate, dollars21) |> 
  pivot_longer(4:5,
               names_to = "value",
               values_to = "estimate"
               ) |> 
  mutate(value = case_when(
    value == "dollars21" ~ "Constant 2021 dollars",
    value == "cdollars" ~ "Current dollars"))

race_inc_plot <- ggplot(b19013_msa,
       aes(x = year,
           y = estimate,
           color = race,
           linetype = value)) +
  geom_line(linewidth = 0.5) +
  geom_point_interactive(
    aes(data_id = estimate,
        tooltip = dollar_format()(estimate)),
    size = 1) +
  facet_wrap(~race, nrow = 1) +
  theme_hfv() +
  add_zero_line("y") +
  scale_x_continuous(breaks = c(2011,2013,2015,2017,2019,2021)) +
  scale_y_continuous(labels = dollar_format()) +
  scale_color_hfv() +
  theme(legend.position = "bottom",
        axis.text.x = element_text(angle = 90, vjust = .2, size = 8)) +
  guides(color = "none") +
  labs(title = "Median household income by race and ethnicity",
       subtitle = "From 2010 to 2021",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, 5-year estimates, Tables B19013B-I.")

publish_plot(race_inc_plot)

```

```{r}
#| label: inc-race-county
#| eval: false

years <- 2010:2021 

b19013 <- paste0("B19013", LETTERS[2:9])

b19013_defns <- load_variables(2020, "acs5") |>
  filter(str_sub(name, end = 7) %in% b19013) |>
  filter(str_detect(name, "PR") == FALSE)

concept_to_race <- function(x) {
  out <- x |>
    str_remove_all("MEDIAN HOUSEHOLD INCOME IN THE PAST 12 MONTHS \\(\\IN 2020 INFLATION-ADJUSTED DOLLARS\\)\\ \\(|\\)") |>
    str_to_title()
}

b19013_cleaned <- b19013_defns |>
  mutate(race = concept_to_race(concept)) |>
  separate(label, c("estimate", "medhhincome"), sep = "!!") |>
  select(variable = name, medhhincome, race) |>
  mutate(across(.fns = ~replace_na(.x, "All")),
          across(.fns = ~str_remove_all(.x, ":")))

b19013_raw <- map_dfr(b19013, function(tb) {
  yearly_data <- map_dfr(years, function(yr) {
    acs_pull <- get_acs(
      geography = "county",
      table = tb,
      year = yr,
      state = "VA"
    ) |>
    left_join(b19013_cleaned, by = "variable")
    acs_rearranged <- acs_pull |>
      mutate(year = yr) |>
      select(variable, year, NAME, GEOID, race, medhhincome,
             estimate, moe)
    acs_rearranged
  })
  yearly_data
})

cpi <- read_excel("data/CPI_U_RS.xlsx") |> 
  rename(year = Year,
         priceindex = Index) |> 
  transform(year = as.numeric(year))

b19013_data <- b19013_raw |> 
  subset(GEOID %in% cv) |> 
  mutate(across(.fns = ~str_remove_all(.x, "Alone Householder")),
         across(.fns = ~str_remove_all(.x, ", Virginia")),
         across(.fns = ~trimws(.x))) |> 
  select(year, NAME, GEOID, race, estimate, moe) |> 
  transform(year = as.numeric(year),
            estimate = as.numeric(estimate))|> 
  left_join(cpi, by = 'year')|> 
  select(year, NAME, GEOID, race, estimate, moe, priceindex) |> 
  transform(dollars21 = ((399/priceindex)*estimate)) |> 
  mutate(race = case_when(
    race == "Black Or African American" ~ "Black",
    race == "Two Or More Races Householder" ~ "Multiracial",
    race == "White Alone, Not Hispanic Or Latino Householder" ~ "White, non-Hispanic",
    race == "Hispanic Or Latino Householder" ~ "Hispanic or Latino",
    TRUE ~ race
  )) |> 
  filter(race %in% c("White, non-Hispanic", "Black", "Asian", "Multiracial", "Hispanic or Latino"))

write_rds(b19013_data, "data/b19013_data.rds")
```

### Wages

::: callout-note
Wage data in this section is sourced from the Occupational Employment and Wage Statistics (OEWS) program of the Bureau of Labor Statistics. OEWS is updated annually, most recently for 2022 data. This dataset provides a rich look into wage distribution by industry and occupation. 

However, OEWS is only available at the national, state, and metro levels. Therefore, the data below covers the full Lynchburg, Virginia Metropolitan Statistical Area (MSA).
:::

Like other regions in the state, regional wages increased across the board from May 2019 to May 2022. The largest percent increases in average wages were among jobs that paid at and below the median wage. In fact, the largest growth occurred in the lowest 10th percentile of wages, due in large part to state lawmakers adopting incremental increases to Virginia's minimum wage in 2020. The first increase from \$7.25 to \$9.50 per hour took effect in 2021.

::: callout-note
Today, state minimum wage is \$11.00 per hour. Under [current law](https://lis.virginia.gov/cgi-bin/legp604.exe?201+sum+SB7), it will increase again to \$12.00 in 2023. Lawmakers must reenact the measure by July 2024 to initiative further increases to \$15.00 per hour by 2026.
:::


```{r}
#| label: wage-pct-data
#| eval: FALSE

# Load OEWS files filtered to Lynchburg, VA MSA

oews_2019 <- read_xlsx("data/oews_va_19.xlsx",
                       sheet = "m2019",
                       na = c("*", "**", "#")) |> 
  filter(area_title == "Lynchburg, VA")

oews_2022 <- read_xlsx("data/oews_va_22.xlsx",
                       sheet = "m2022",
                       na = c("*", "**", "#")) |> 
  janitor::clean_names(case = "snake") |> 
  filter(area_title == "Lynchburg, VA")


# Pull out annual wage percentiles for each year

percentiles_2019 <- oews_2019 |> 
  filter(occ_code == "00-0000") |> 
  select(9, 24:28) |> 
  mutate(year = "y2019", .before = 1)

percentiles_2022 <- oews_2022 |> 
  filter(occ_code == "00-0000") |> 
  select(10, 26:30) |> 
  mutate(year = "y2022", .before = 1)

# Combine years, rearrange, and calculate percent change over time

percentiles <- bind_rows(percentiles_2019, percentiles_2022) |> 
  pivot_longer(3:7) |> 
  pivot_wider(names_from = year,
              values_from = value) |> 
  mutate(pct_change = (y2022 - y2019)/y2019,
         wage = case_when(
           name == "a_pct10" ~ "10th percentile",
           name == "a_pct25" ~ "25th percentile",
           name == "a_median" ~ "Median",
           name == "a_pct75" ~ "75th percentile",
           name == "a_pct90" ~ "90th percentile"
         )) |> 
  mutate(wage = fct_relevel(wage,
                            "10th percentile",
                            "25th percentile",
                            "Median",
                            "75th percentile",
                            "90th percentile"))

write_rds(percentiles, "data/oews_pct.rds")

```

```{r}
#| label: fig-wage-pct-plot
#| fig.cap: "Percent change in annual wage in Richmond, VA MSA"

oews_pct <- read_rds("data/oews_pct.rds")

wage_pct_plot <- ggplot(oews_pct,
       aes(x = pct_change,
           y = wage,
           fill = wage,
           data_id = pct_change,
           tooltip = label_percent()(pct_change))) +
  geom_col() +
  geom_col_interactive(size = 2) +
  scale_x_continuous(labels = label_percent()) +
  scale_fill_hfv() +
  labs(title = "Percent change in annual wage by wage percentile",
       subtitle = "Lynchburg, VA MSA | May 2019 to May 2022",
       caption = "**Source:** U.S. Bureau of Labor Statistics, Occupational Employment and Wage Statistics.") +
  theme_hfv() +
  add_zero_line(axis = "x") +
  flip_gridlines()


publish_plot(wage_pct_plot)

```

Over this same period, wages in the region grew for all five of the most common occupation categories by total employment numbers. Workers in the Food Preparation and Serving Related sector saw the largest increases---from an average annual salary of \$19,950 to \$25,680 (nearly 30 percent).

Jobs in Production, Transportation and Material Moving, Office and Administrative Support, and Sales and Related sectors---totaling 46,610 in the region as of May 2022---also saw wage growth more than the 13 percent average increase.

```{r}
#| label: wage-occ-data
#| eval: FALSE

# Find 5 most common major occupation categories from 2022

oews_occ <- oews_2022 |> 
  filter(o_group == "major") |> 
  slice_max(tot_emp, n = 5) |> 
  select(9, 10, tot_emp_2022 = 12, a_median_2022 = 28)

# Add 2019 wage data for those occupations

oews_occ <- oews_occ |> 
  left_join(oews_2019, by = "occ_code")|> 
  select(1, occ_title = 2, 3, 4, tot_emp_2019 = 14, a_median_2019 = 29)

# Calculate wage percent change and add median for all occupations

oews_occ <- oews_occ |> 
  mutate(pct_change = (a_median_2022 - a_median_2019) / a_median_2019) |> 
  add_row(occ_title = "All Occupations", pct_change = as.numeric(oews_pct[oews_pct$wage == "Median",5]))

write_rds(oews_occ, "data/oews_occ.rds")

```

```{r}
#| label: fig-wage-occ-plot
#| fig.cap: "Percent change in annual wage for top 5 most common occupation categories"

oews_occ <- read_rds("data/oews_occ.rds")

wage_occ_plot <- ggplot(oews_occ,
       aes(x = pct_change,
           y = reorder(occ_title, pct_change),
           fill = occ_title,
           data_id = pct_change,
           tooltip = label_percent()(pct_change))) +
  geom_col() +
  geom_col_interactive(size = 2) +
  scale_x_continuous(labels = label_percent()) +
  scale_y_discrete(labels = function(x) str_wrap(x, width = 30)) +
  scale_fill_hfv() +
  labs(title = "Percent change in annual wage for top 5 most common occupation categories",
       subtitle = "Lynchburg, VA MSA | May 2019 to May 2022",
       caption = "**Source:** U.S. Bureau of Labor Statistics, Occupational Employment and Wage Statistics.") +
  theme_hfv() +
  add_zero_line(axis = "x") +
  flip_gridlines()

publish_plot(wage_occ_plot)
```
### Unemployment

Through much of the early parts of the pandemic, the Lynchburg region saw record high unemployment rates, topping out at 10.5 percent in April 2020. This rate surpassed the post-Recession fall out when the unemployment rate was 8.7 percent in February 2010.

More recently, employment recovery post COVID-19 brought about a record low unemployment rate in November 2021. But recent trends are showing growing unemployment on par with pre-pandemic levels.
```{r}
#| label: laus

laus <- read_csv("data/laus_lynchburg.csv") |> 
  clean_names() |> 
  mutate(month = str_sub(label, -3)) |> 
  mutate(month = match(month, month.abb)) |> 
  mutate(date = as.Date(as.yearmon(paste(year, month), "%Y %m"))) |> 
  select(date, rate = value) |> 
  mutate(rate = rate/100)
  
laus_plot <- ggplot(laus,
       aes(x = date,
           y = rate,
           color = rate)) +
  geom_line(linewidth = 0.5) + 
  geom_point_interactive(
    aes(data_id = rate,
        tooltip = percent_format()(rate)),
    size = 1) +
  theme_hfv() +
  scale_color_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  labs(title = "Unemployment rate",
       subtitle = "From 2008 through March 2023",
       caption = "**Source:** U.S. Bureau of Labor Statistics. Local Area Unemployment Statistics.") +
  scale_y_continuous(labels = percent_format())

publish_plot(laus_plot)


```
## Housing stock

### Housing type

The bulk of the region's housing stock is composed of single-family housing (74 percent). Much of the single-family housing stock resides in homeownership, but in 2015 single-family housing decreased roughly two percentage points from homeownership towards rental. Manufactured homes, which is included in the Other category, has continued to make up the second largest portion of the region's housing stock (10 percent overall). 

Rental housing stock is diverse and has grown to include duplexes, tri-plexes, and quads, as well as larger multifamily properties. While these smaller multifamily properties like duplexes once made up nearly two percent of the homeownership market, they have reduced to a half of a percent of the region's entire housing stock.

Options like these have been touted as Missing Middle Housing, which are able to offer affordable homeownership options.

```{r}
#| label: structure-data
#| eval: false

# Table B25127: Tenure by year structure built by units in structure

years <- 2010:2021

b25127_vars <- load_variables(2021, "acs5") |> 
  filter(str_sub(name, end = 6) %in% "B25127")

b25127_raw <- map_dfr(years, function(yr){
  b25127_pull <- get_acs(
    geography = "county",
    state = "VA",
    table = "B25127",
    year = yr,
    survey = "acs5",
    cache_table = TRUE
  ) |> 
    mutate(year = yr)
})

b25127_raw <- b25127_raw |> 
  subset(GEOID %in% cv) 

b25127_vars_cleaned <- b25127_vars |> 
  separate(label, into = c("est", "total", "tenure", "yrbuilt", "structure"), sep = "!!") |> 
  select(variable = name, tenure, yrbuilt, structure) |> 
  drop_na() |> 
  mutate(across(.fns = ~str_remove_all(.x, ":"))) |> 
  mutate(tenure = case_when(
    tenure == "Owner occupied" ~ "Homeowner",
    tenure == "Renter occupied" ~ "Renter"
  ))

b25127_raw <- b25127_raw |> 
  right_join(b25127_vars_cleaned, by = "variable") |> 
  select(NAME, GEOID, year, tenure, yrbuilt, structure, estimate, moe)

b25127_data <- b25127_raw |> 
  mutate(NAME = str_remove_all(NAME, ", Virginia"),
         yrbuilt = str_remove_all(yrbuilt, "Built "),
         NAME = case_when(
           NAME == "Bedford city" ~ "Bedford County", # Aggregate Bedford City and Bedford County
           TRUE ~ NAME)) |>
  select(NAME, GEOID, year, tenure, yrbuilt, structure, estimate) |> 
  mutate(structure = case_when(
    structure == "1, detached  or attached" ~ "Single-family",
    structure == "2 to 4" ~ "2 to 4 units",
    structure == "5 to 19" ~ "5 to 19 units",
    structure == "20 to 49" ~ "20 or more units",
    structure == "50 or more" ~ "20 or more units",
    TRUE ~ "Other"
  )) 

write_rds(b25127_data, "data/b25127_data.rds")

```

```{r}
#| label: fig-structure
#| fig-cap: "Housing stock by structure type and tenure"

b25127_data <- read_rds("data/b25127_data.rds")

cv_structure <- b25127_data |> 
  group_by(year, tenure, structure) |> 
  summarise(estimate = sum(estimate)) |> 
  group_by(year) |> 
  mutate(pct = round(estimate/sum(estimate), 4)) |> 
  mutate(year = as.character(year)) |> 
  mutate(structure = fct_relevel(structure, "Single-family", "2 to 4 units", "5 to 19 units",
                                 "20 or more units", "Other")) |> 
  ungroup()

cv_structure_plot <- ggplot(cv_structure,
       aes(x = year,
           y = pct,
           fill = fct_rev(structure),
           data_id = pct,
           tooltip = label_percent(accuracy = 0.1)(pct))) +
  geom_col(position = "stack") +
  geom_col_interactive() +
  facet_wrap(~tenure) +
  scale_y_continuous(labels = label_percent()) +
  theme_hfv() +
  add_zero_line("y") +
  scale_fill_hfv(-1) +
  guides(fill = guide_legend(reverse = TRUE)) +
  labs(title = "Housing stock by structure type and tenure",
       subtitle = "Percent of total occupied housing from 2010 to 2021",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, 5-year estimates, Table B25127.") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5),
        legend.position = "right")

publish_plot(cv_structure_plot)

```

Most of the region's housing is surpassing 20 years in age. A construction boom in the late 20th century (from 1960 to 1999) contributed to much of the region's homeownership and rental housing stock. With aging housing stock, housing quality becomes an ever-present issue.

```{r}
#| label: fig-yrbuilt
#| fig-cap: "Housing stock by year built and tenure"

cv_yrbuilt <- b25127_data |> 
  filter(year == 2021) |> 
  group_by(tenure, yrbuilt) |> 
  summarise(estimate = sum(estimate))

cv_yrbuilt_plot <- ggplot(cv_yrbuilt,
       aes(x = yrbuilt,
           y = estimate,
           fill = tenure,
           data_id = estimate,
           tooltip = label_comma()(estimate))) +
  geom_col() +
  geom_col_interactive() +
  facet_wrap(~tenure) +
  theme_hfv() +
  add_zero_line("y") +
  scale_fill_hfv() +
  scale_x_discrete(labels = function(x)str_wrap(x, width = 9)) +
  scale_y_continuous(labels = label_comma()) +
  labs(title = "Housing stock by year built and tenure",
       subtitle = "Total occupied housing units",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, 2017-2021 5-year estimates, Table B25127.") + 
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5))

publish_plot(cv_yrbuilt_plot)

```

The number of smaller bedroom homes has been declining since 2010, particularly within the existing homeowner housing stock. From 2010 to 2021, there was a loss of 2,435 two-bedroom homes in homeownership. Some of that loss could be accounted for in a transition to rental, but two-bedroom rentals only increased by 1,487. One-bedroom rentals, often in-demand by young professionals, as well as those most in need, also so a decline (-191), but two-bedroom rentals accounted for much of the growth in the rental market.

Larger homes with three or more bedrooms saw the greatest increase in the region. Although larger homes are meeting a demand, they often come at the expense of affordability.

```{r}
#| label: beds-data
#| eval: false

years <- 2010:2021

b25042_vars <- load_variables(2021, "acs5") |> 
  filter(str_sub(name, end = 6) %in% "B25042")

b25042_raw <- map_dfr(years, function(yr) {
  b25042_pull <- get_acs(
    geography = "county",
    state = "VA",
    table = "B25042",
    year = yr,
    survey = "acs5",
    cache_table = TRUE
  ) |> 
    mutate(year = yr)
})

b25042_raw <- b25042_raw |> 
  subset(GEOID %in% cv)

b25042_vars_cleaned <- b25042_vars |> 
  separate(label, into = c("est", "total", "tenure", "br"), sep = "!!") |> 
  select(variable = name, tenure, br) |> 
  drop_na() |> 
  mutate(across(.fns = ~str_remove_all(.x, ":"))) |> 
  mutate(tenure = case_when(
    tenure == "Owner occupied" ~ "Homeowner",
    tenure == "Renter occupied" ~ "Renter"
  ))

b25042_raw <- b25042_raw |> 
  right_join(b25042_vars_cleaned, by = "variable") |> 
  select(NAME, GEOID, year, tenure, br, estimate)

b25042_data <- b25042_raw |> 
  mutate(NAME = str_remove_all(NAME, ", Virginia"),
         NAME = case_when(
           NAME == "Bedford city" ~ "Bedford County", # Aggregate Bedford City and Bedford County
           TRUE ~ NAME)) |>
  select(NAME, GEOID, year, tenure, br, estimate) 


write_rds(b25042_data, "data/b25042_data.rds")
```

```{r}
#| label: fig-beds
#| fig-cap: "Change in housing stock by number of bedrooms and tenure"

b25042_data <- read_rds("data/b25042_data.rds")

cv_beds <- b25042_data |> 
  mutate(br = case_when(
    br == "1 bedroom" ~ "One",
    br == "2 bedrooms" ~ "Two",
    br == "3 bedrooms" ~ "Three",
    br == "4 bedrooms" ~ "Four or more",
    br == "5 or more bedrooms" ~ "Four or more",
    br == "No bedroom" ~ "None"
  )) |> 
  group_by(year, tenure, br) |> 
  summarise(estimate = sum(estimate)) |> 
  pivot_wider(
    names_from = year,
    values_from = estimate
  ) |> 
  mutate(chg = `2021` - `2010`) |> 
  mutate(br = fct_relevel(br, "One", "Two", "Three", "Four or more", "None"))

cv_beds_plot <- ggplot(cv_beds,
       aes(x = br,
           y = chg,
           fill = tenure,
           data_id = chg,
           tooltip = label_comma()(chg))) +
  geom_col(position = "stack") +
  geom_col_interactive() +
  facet_wrap(~tenure) +
  theme_hfv() +
  add_zero_line("y") +
  scale_fill_hfv() +
  labs(title = "Change in housing stock by number of bedrooms and tenure",
       subtitle = "From 2010 to 2021",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, 2017-2021 5-year estimates, Table B25042.") +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 8)) +
  scale_y_continuous(labels = label_number(big.mark = ",", style_positive = "plus", style_negative = "minus"))
  
publish_plot(cv_beds_plot)

```

Manufactured home communities are spread out across the region. These homes often serve as market-rate affordable housing, but they are face several challenges, including risk of redevelopment, poor housing quality, and aging infrastructure.

There are 99 manufactured home communities in the region. Three quarters of the communities in the region are small, consisting of less than 50 homes. 

:::{.callout-note}

TO ADD LATER: specific issues and context on MHCs

:::

```{r}
#| label: fig-mhc-map
#| fig-cap: "Map of manufactured home communities"

# mhc <- st_read("https://services1.arcgis.com/Hp6G80Pky0om7QvQ/arcgis/rest/services/Mobile_Home_Parks/FeatureServer/0/query?outFields=*&where=1%3D1&f=geojson", quiet = TRUE) |> 
#   filter(STATE == "VA") |> 
#   filter(str_detect(COUNTY, "AMHERST|APPOMATTOX|BEDFORD|CAMPBELL|LYNCHBURG"))
# 
# write_rds(mhc, "data/cv_mhc.rds")

# Status for all is OPEN or NOT AVAILABLE - NONE ARE CLOSED

library(leaflet)
library(ggtext)
library(mapview)

mhc <- read_rds("data/cv_mhc.rds") |> 
  mutate(SIZE = str_to_sentence(SIZE))

# if (knitr::is_html_output()) {
  
  mapview(
    mhc,
    zcol = "SIZE",
    legend = T,
    popup = F,
    burst = F,
    layer.name = "Units in park"
  )

# Not sure what the extents need to be in order to get this right.
  
  # } else {
  # 
  # ggplot() +
  #   cv_basemap +
  #   geom_sf(mhc, mapping = aes(color = SIZE), show.legend = "point") +
  #   scale_color_hfv() +
  #   scale_x_continuous(expand = expansion(mult = 0),
  #                      limits = c(-8660000, -8585000)) +
  #   scale_y_continuous(expand = expansion(mult = 0),
  #                      limits = c(4466959, 4548000)) +
  #   labs(title = "Manufactured housing communities in Lynchburg region",
  #        color = "Units in park",
  #        caption = "**Source:** U.S. Department of Homeland Security. Homeland Infrastructure Foundation-Level Data (HIFLD).") +
  #   theme_pha() +
  #   theme(plot.title = element_markdown(margin = margin(b = 10, unit = "pt")),
  #         panel.grid = element_blank(),
  #         axis.title = element_blank(),
  #         axis.text = element_blank(),
  #         legend.position = "right",
  #         legend.title = element_text(),
  #         legend.key = element_blank())
  #   
  # }


```

```{r}
#| label: fig-mhc
#| fig-cap: "Manufactured home communities by size"

mhc <- read_rds("data/cv_mhc.rds")

mhc_group <- mhc |> 
  group_by(SIZE) |> 
  summarise(count = n_distinct(OBJECTID)) |> 
  mutate(size = str_to_sentence(SIZE))

mhc_group_plot <- ggplot(mhc_group,
                         aes(x = reorder(size, count, decreasing = TRUE),
                             y = count,
                             data_id = count,
                             tooltip = count,
                             fill = size)) +
  geom_col(position = "dodge") +
  geom_col_interactive() +
  theme_hfv() +
  add_zero_line("y") +
  scale_fill_hfv() +
  labs(title = "Manufactured home communities by size",
       subtitle = "Number of homes in each community",
       caption = "**Source:** U.S. Department of Homeland Security. Homeland Infrastructure Foundation-Level Data (HIFLD).")

publish_plot(mhc_group_plot)

```
### Vacancy

```{r}
#| label: vacancy-data
#| eval: false

years <- 2010:2021

b25004_vars <- load_variables(2021, "acs5") |> 
   filter(str_sub(name, end = 6) %in% "B25004") 

b25004_raw <- map_dfr(years, function(yr){
  b25004_pull <- get_acs(
    geography = "county",
    state = "VA",
    table = "B25004",
    year = yr,
    survey = "acs5",
    cache_table = TRUE
  ) |>
    mutate(year = yr)
})

b25004_raw <- b25004_raw |> 
  subset(GEOID %in% cv)
  
b25004_vars_clean <- b25004_vars |> 
  separate(label, into = c("est", "total", "status"), sep = "!!") |> 
  select(variable = name, status)

b25004_data <- b25004_raw |> 
  left_join(b25004_vars_clean, by = "variable") |> 
  mutate(NAME = str_remove_all(NAME, ", Virginia"),
         NAME = case_when(
           NAME == "Bedford city" ~ "Bedford County", # Aggregate Bedford City and Bedford County
           TRUE ~ NAME
         )) |> 
  select(GEOID, NAME, year, status, estimate) |> 
  drop_na()


write_rds(b25004_data, "data/b25004_data.rds")


```


```{r}
#| label: fig-salerent-vacancy

# Vacancy rate for for sale and for rent housing = vacant/occupied by tenure - uses B25004 and B25003

rs_vacancy <- read_rds("data/b25004_data.rds") |> 
    filter(status == "For rent" |
           status == "Rented, not occupied" |
           status == "For sale only" |
           status == "Sold, not occupied") |> 
  group_by(year, status) |> 
  summarise(estimate = sum(estimate)) |> 
  mutate(tenure = case_when(
    status == "For rent" ~ "Renter",
    status == "Rented, not occupied" ~ "Renter",
    TRUE ~ "Homeowner"
  )) |> 
  mutate(year = as.character(year)) |> 
  mutate(status = "Vacant") |> 
  group_by(year, tenure, status) |> 
  summarise(estimate = sum(estimate))

b25003_data <- read_rds("data/b25003_data.rds") |> 
  mutate(status = "Occupied") |> 
  group_by(year, tenure, status) |> 
  summarise(estimate = sum(estimate)) |> 
  mutate(year = as.character(year))

rs_rate <- rbind(rs_vacancy, b25003_data) |> 
  pivot_wider(names_from = status,
              values_from = estimate) |> 
  mutate(rate = (Vacant/Occupied))

ggplot(rs_rate,
       aes(x = year,
           y = rate,
           group = tenure,
           color = tenure)) +
    geom_line() +
     geom_point_interactive(
    aes(data_id = rate,
        tooltip = percent_format()(rate)),
    size = 1) +
  scale_y_continuous(labels = percent_format()) +
  theme_hfv() +
  scale_color_hfv() +
  labs(title = "Vacancy rate among rental and homeowner stock",
       caption = "**Source:** U.S. Census Bureau. American Community Survey, 2010 to 2021, 5-year estimates, Table B25003 and B25004.")


```

```{r}
#| label: fig-vstatus

# Leaving out migrant workers because it is so minimal

ostatus <- read_rds("data/b25004_data.rds") |> 
  filter(status == c("For seasonal, recreational, or occasional use", "Other vacant")) |> 
  group_by(year, status) |> 
  summarise(estimate = sum(estimate)) |> 
  mutate(year = as.character(year))

ggplot(ostatus,
       aes(x = year,
           y = estimate,
           fill = status,
           data_id = estimate,
           tooltip = number_format(big.mark = ",")(estimate))) +
  geom_col(position = "dodge") + 
  facet_wrap(~status, labeller = label_wrap_gen(15)) + 
  theme_hfv() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +
  scale_fill_hfv() +
  scale_y_continuous(labels = number_format(big.mark = ",")) +
  labs(title = "Vacant housing status (not for sale or rent)",
       caption = "**Source:** U.S. Census Bureau. American Community Survey, 2010 to 2021, 5-year estimates, Table B25004.")



```

### Building trends

The region has still not recovered to its Great Recession building-levels, when residential building permits peaked at 1,840 in 2005. Since 2012, permits have only averaged at 768 per year, less than half of what it was in 2005.  

In addition, the early 2000s saw a greater number of two to four bedroom homes. But by 2005, these diverse types of housing were nearly non-existent from the building pipeline in the region.

```{r}
#| label: bps-data
#| eval: false

bps_years <- 2000:2022

header_rows <- read_csv("https://www2.census.gov/econ/bps/County/co2020a.txt", 
                        col_names = FALSE,
                        n_max = 2)

column_names <- header_rows |>
  select(X1:X18) |>
  t() |>
  as_tibble() |>
  mutate(group = rep(1:6, each = 3)) |>
  group_by(group) |>
  fill(V1, .direction = "updown") |>
  mutate(names = paste0(V1, ": ", V2)) |>
  pull(names)

library(glue)

cbps_raw <- map_df(bps_years, ~{
  raw <- read_csv(glue("https://www2.census.gov/econ/bps/County/co{.x}a.txt"), skip = 2,
                    col_names = FALSE) |>
    select(X1:X18) |>
    set_names(column_names)
  
  raw
  
})


# Read in latest 2022 cumulative data (through November)

cbps_ytd <- read_csv("https://www2.census.gov/econ/bps/County/co2304y.txt", 
                     col_names = FALSE,
                     skip = 2) |> 
  select(X1:X18) |> 
  set_names(column_names) |> 
  mutate(`Survey: Date` = 2023)

cbps_data <- cbps_raw |> 
  bind_rows(cbps_ytd) |> 
  mutate(year = `Survey: Date`,
         GEOID = paste0(`FIPS: State`, `FIPS: County`)) |>
  select(`1-unit: Bldgs`:GEOID) |>
  filter(GEOID %in% cv) |>
  pivot_longer(`1-unit: Bldgs`:`5+ units: Value`,
               names_to = "type",
               values_to = "value") |>
  separate(type, into = c("Type", "col"), sep = ": ") |>
  pivot_wider(names_from = col,
              values_from = value) |>
  rename_with(tolower, Type:Value) |> 
  select(GEOID, year, type:units)

cv_cbps <- cbps_data |> 
  mutate(GEOID = case_when(
    GEOID == "51515" ~ "51019",
    TRUE ~ GEOID)) |> 
  left_join(counties("VA", year = 2021), by = "GEOID") |> 
  select(GEOID, NAMELSAD, year, type, units) |> 
  group_by(GEOID, NAMELSAD, year, type) |> 
  summarise(units = sum(units))


write_rds(cv_cbps, "data/cv_cbps.rds")
```

```{r}
#| label: fig-permits
#| fig-cap: "New residential building permits by type"

cv_cbps <- read_rds("data/cv_cbps.rds") |> 
  group_by(year, type) |> 
  summarise(units = sum(units))

# permit_avg <- cv_cbps |> 
#   filter(year >= 2012) |> 
#   group_by(year) |> 
#   summarise(units = sum(units))
# 
# mean(permit_avg$units)

cv_cbps_plot <- ggplot(cv_cbps,
       aes(x = year,
           y = units,
           fill = forcats::fct_rev(type),
           data_id = units,
           tooltip = label_comma()(units))) +
  geom_col(position = "stack") +
  geom_col_interactive() +
  theme_hfv() +
  add_zero_line("y") +
  scale_fill_hfv(-1) +
  scale_y_continuous(labels = label_comma()) +
  labs(title = "New residential building permits by type",
       subtitle = "Annual permits issues from 2000 through April 2023",
       caption = "**Source:** U.S. Census Bureau, Building Permits Survey (BPS).") +
  theme(legend.position = "right")

publish_plot(cv_cbps_plot)

```

## Homeownership market

The regional homeownership rate has been on a slow decline in the last decade, from 72 percent in 2010 to 70 percent in 2021.

```{r}
#| label: fig-ho-rate
#| fig-cap: "Homeownership rate"

# Read in tenure data via Table B25003.

b25003_data <- read_rds("data/b25003_data.rds")

# Aggregate data to the regional level.

ho_rate <- b25003_data |>
  select(year, tenure, estimate) |> 
  group_by(year, tenure) |> 
  summarise(estimate = sum(estimate))

# Calculate the percent of total by year and tenure.

cv_ho <- ho_rate |> 
  group_by(year) |> 
  mutate(pct = estimate/sum(estimate)) |>  
  filter(tenure == "Homeowner") # Retain only homeowners to get the homeownership rate.

cv_ho_plot <- ggplot(cv_ho,
       aes(x = year, 
           y = pct)) +
  geom_line(linewidth = 0.5) +
  geom_point_interactive(
    aes(data_id = pct,
        tooltip = label_percent(accuracy = 0.1)(pct)),
    size = 1) +
  theme_hfv() +
  scale_color_hfv() +
  scale_y_continuous(labels = label_percent(), limits = c(.65,.75)) +
  scale_x_continuous(breaks = seq(from = 2010, to = 2021, by = 1)) +
  labs(title = "Homeownership rate",
       subtitle = "From 2010 to 2021",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, 5-year estimates, Table B25003.")

publish_plot(cv_ho_plot)

```

As the homeownership rate has declined slightly, the regional median residential sales price has continued to climb in recent years. Although fluctuating between \$180,000 and \$225,000 between 2016 and 2019, the region saw a major bump in early 2020 as the pandemic impacts hit the region's housing market that have kept home prices well-above \$225,000 ever since.

```{r}
#| label: fig-mls-price
#| fig-cap: "Median residential sales price by month"

# Utilize Lynchburg MLS data. Need median sales price for the entire region from 2000 to 2022 or at least 2010. Monthly median sales price is preferred.

cv_price <- read_excel("data/cv_mls_data.xlsx", sheet = "Median Sales Price By Month") |> 
  mutate(date = as.yearmon(paste(Year, Month), "%Y %m")) |> 
  mutate(date = as.Date(date)) |> 
  filter(Property_Type == "RESI") |> 
  mutate(price = as.numeric(Median_Sales_Price)) |> 
  select(date, price)

library(fredr)

cpi_ls <- fredr(
  series_id = "CUUR0000SA0L2"
) |> 
  select(date, value) |> 
  mutate(date = as.Date(date)) |> 
  mutate(value = as.numeric(value))

cv_price_adj <- cv_price |> 
  left_join(cpi_ls, by = "date") |> 
  transform(price_adj = ((272.711/value)*price)) |> 
  select(date, price, price_adj) |> 
  pivot_longer(2:3,
               names_to = "type",
               values_to = "price") |> 
  mutate(type = case_when(
    type == "price" ~ "Current dollars",
    type == "price_adj" ~ "Constant 2022 dollars"
  )) |> 
  transform(price_label = dollar(price)) |> 
  mutate(tooltip = c(paste0("Date: ", date, "\n Price: ", price_label)))
  
cv_price_plot <- ggplot(cv_price_adj,
       aes(x = date,
           y = price,
           color = type)) +
  geom_line(linewidth = 0.5) +
  geom_point_interactive(
    aes(data_id = tooltip,
        tooltip = tooltip)) +
  theme_hfv() +
  scale_color_hfv() +
  scale_y_continuous(labels = dollar_format()) +
#  geom_smooth(method = lm, col = "#B1005F") +
  labs(title = "Median residential sales price by month",
       subtitle = "January 2016 to December 2022",
       caption = "**Source:** Lynchburg Association of REALTORS®.") +
  theme(legend.position = "bottom")

publish_plot(cv_price_plot)

```

The impact of the pandemic is most noticeable when looking at the number of closed home sales and average days on market. The region saw record high closed home sales during the summers of 2020 and 2021, when it hit 435 sales in June 2020 and then 448 in June 2021.

```{r}
#| label: fig-mls-sales
#| fig-cap: "Closed home sales by month"

# Utilzie Lynchburg MLS data. Need mumber of closed sales for the entire region from 2000 to 2022 or at least 2010. Monthly number is preferred.

cv_sold <- read_excel("data/cv_mls_data.xlsx", sheet = "Number Sold Per Month") |> 
  mutate(date = as.yearmon(paste(Year, Month), "%Y %m")) |> 
  mutate(date = as.Date(date)) |> 
  filter(Property_Type == "RESI") |> 
  mutate(count = as.numeric(Quantity)) |> 
  select(date, count) |> 
  mutate(tooltip = c(paste0("Date: ", date, "\n Closed home sales: ", count)))

cv_sold_plot <- ggplot(cv_sold,
       aes(x = date,
           y = count,
           fill = count,
           data_id = tooltip,
           tooltip = tooltip)) +
  geom_col() + 
  geom_col_interactive() +
  theme_hfv() + 
  add_zero_line("y") +
  scale_fill_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) +
  labs(title = "Closed home sales by month",
       subtitle = "January 2016 to December 2022",
       caption = "**Source:** Lynchburg Association of REALTORS®.")

publish_plot(cv_sold_plot)

```

The demand in the region is further exemplified by the dramatic decline in average days on market. Already on the decline since 2017, the region hit record low average days on market in middle of 2021. Since then, homes have remained below an average of 40 days on the market.

With increasing mortgage interest rates in recent months, home sales, as well as prices, have seen declines. But prices will continue to rise, although not as rapidly as during the early aughts of the pandemic when record low interest rates opened up housing opportunity for many who could not have afforded a home otherwise. 

```{r}
#| label: fig-mls-dom
#| fig-cap: "Average days on market by month"

# Utilize Lynchburg MLS data. Need days on market for the entire region from 2000 to 2022 or at least 2010. Monthly ratio is preferred.

cv_dom <- read_excel("data/cv_mls_data.xlsx", sheet = "Average DOM Per Month") |> 
  mutate(date = as.yearmon(paste(Year, Month), "%Y %m")) |> 
  mutate(date = as.Date(date)) |> 
  filter(Property_Type == "RESI") |> 
  mutate(dom = as.numeric(`Average DOM`)) |> 
  select(date, dom) |> 
  mutate(tooltip = c(paste0("Date: ", date, "\n Average DOM: ", dom)))

cv_dom_plot <- ggplot(cv_dom,
       aes(x = date,
           y = dom,
           fill = dom,
           data_id = tooltip, 
           tooltip = tooltip)) +
  geom_col() + 
  geom_col_interactive() +
  theme_hfv() + 
  add_zero_line("y") +
  scale_fill_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) +
  labs(title = "Average days on market by month",
       subtitle = "January 2016 to December 2022",
       caption = "**Source:** Lynchburg Association of REALTORS®.")

publish_plot(cv_dom_plot)

```

```{r}
#| label: hmda
#| eval: false
library(tidyverse)
library(httr)
library(jsonlite)

col_spec <- cols_only(
  "activity_year" = col_double(),
  "lei" = col_character(),
  "county_code" = col_character(),
  "census_tract" = col_character(),
  "derived_loan_product_type" = col_character(),
  "derived_dwelling_category" = col_character(),
  "derived_ethnicity" = col_character(),
  "derived_race" = col_character(),
  "derived_sex" = col_character(),
  "action_taken" = col_integer(),
  "purchaser_type" = col_integer(),
  "loan_type" = col_integer(),
  "loan_purpose" = col_integer(),
  "reverse_mortgage" = col_integer(),
  "loan_amount" = col_character(),
  "loan_to_value_ratio" = col_character(),
  "interest_rate" = col_character(),
  "total_loan_costs" = col_character(),
  "loan_term" = col_character(),
  "property_value" = col_character(),
  "construction_method" = col_integer(),
  "occupancy_type" = col_integer(),
  "manufactured_home_secured_property_type" = col_integer(),
  "manufactured_home_land_property_interest" = col_integer(),
  "total_units" = col_character(),
  "applicant_age" = col_character(),
  "income" = col_double(),
  "debt_to_income_ratio" = col_character(),
  "denial_reason-1" = col_integer(),
  "denial_reason-2" = col_integer(),
  "denial_reason-3" = col_integer(),
  "denial_reason-4" = col_integer(),
  "tract_minority_population_percent" = col_double(),
  "ffiec_msa_md_median_family_income" = col_double(),
  "tract_to_msa_income_percentage" = col_double(),
  "tract_owner_occupied_units" = col_double()
)

hmda_pull <- map_dfr(2018:2021, ~{
  GET("https://ffiec.cfpb.gov/v2/data-browser-api/view/csv", 
      query = list(
        states = "VA",
        years = .x
      ), 
      progress()) %>%
    content(as = "text") %>%
    read_csv(col_types = col_spec) 
})


cv_hmda <- hmda_pull |> 
  mutate(GEOID = as.character(county_code)) |>
  subset(GEOID %in% cv) |>
  select(GEOID,
         activity_year,
         loan = derived_loan_product_type,
         hometype = derived_dwelling_category,
         ethnicity = derived_ethnicity,
         race = derived_race,
         action_taken,
         loan_type,
         loan_purpose,
         loan_amount,
         occupancy_type,
         applicant_age
         ) |> 
  mutate(action_taken = case_when(
    action_taken == 1 ~ "Loan originated",
    action_taken == 2 ~ "Application approved but not accepted",
    action_taken == 3 ~ "Application denied",
    action_taken == 4 ~ "Application withdrawn by applicant",
    action_taken == 5 ~ "File closed for incompleteness",
    action_taken == 6 ~ "Purchased loan",
    action_taken == 7 ~ "Preapproval request denied",
    action_taken == 8 ~ "Preapproval request approved but not accepted"),
    loan_type = case_when(
      loan_type == 1 ~ "Conventional (not insured or guaranteed by FHA, VA, RHS, or FSA)",
      loan_type == 2 ~ "Federal Housing Administration insured (FHA)",
      loan_type == 3 ~ "Veterans Affairs guaranteed (VA)",
      loan_type == 4 ~ "USDA Rural Housing Service or Farm Service Agency guaranteed (RHS or FSA)"),
    loan_purpose = case_when(
      loan_purpose == 1 ~ "Home purchase",
      loan_purpose == 2 ~ "Home improvement",
      loan_purpose == 31 ~ "Refinancing",
      loan_purpose == 32 ~ "Cash-out refinancing",
      loan_purpose == 4 ~ "Other purpose",
      loan_purpose == 5 ~ "Not applicable"),
    occupancy_type = case_when(
      occupancy_type == 1 ~ "Principal residence",
      occupancy_type == 2 ~ "Second residence",
      occupancy_type == 3 ~ "Investment property"))


write_rds(cv_hmda, "data/cv_hmda.rds") 


```

```{r}
#| label: fig-loans

cv_hmda <- read_rds("data/cv_hmda.rds")

cv_mort <- cv_hmda |> 
  filter(action_taken == "Loan originated", 
         loan_purpose == "Home purchase") |> 
  group_by(activity_year, occupancy_type) |> 
  summarise(loans = n())

ggplot(cv_mort,
       aes(x = activity_year, 
           y = loans,
           fill = factor(occupancy_type, levels = c("Investment property", "Second residence", "Principal residence")))) +
  geom_col() +
  labs(fill = "Occupancy type") +
  theme_hfv() +
  scale_fill_hfv() +
  theme(legend.position = "right") +
  scale_y_continuous(labels = number_format(big.mark = ","))


```


## Rental market

Average rent for the region has been relatively flat since 2016. The average market asking rent was \$1,049 in the first quarter of 2016. By the fourth quarter of 2022, the typical rent in the region had only increased by \$3 to \$1,052. 

```{r}
#| label: fig-rent
#| fig-cap: "Average market asking rent by quarter"

# Utilize CoStar properties search for Multi-Family. Filter by MSA - Lynchburg - VA Market. Then review Analytics and pull QUARTERLY Market Asking Rent Per Unit for entire region. Do not bring in Forecast and set History to All.

# Download data for current rent and inflation-adjusted rent into a single csv - name cvpdc_rent.csv

# Note the download date of data here: 1/1/2023

library(lubridate)

cvpdc_rent <- read_csv("data/cvpdc_rent.csv") |>
  filter(!str_detect(period, "QTD")) |> 
  mutate(period = as.Date(as.yearqtr(period, format = "%Y Q%q"), frac = 1)) |> 
  pivot_longer(2:3,
               names_to = "value",
               values_to = "estimate") |> 
  arrange(desc(value)) |> 
  mutate(year = year(period)) |> 
  filter(year >= 2016) |> 
  mutate(value = case_when(
    value == "current" ~ "Current dollars",
    value == "infl_adj" ~ "Constant 2022 dollars"
  )) |> 
  mutate(price_label = dollar(estimate)) |> 
  mutate(tooltip = c(paste0("Date: ", period, "\n Average rent: ", price_label)))

cvpdc_rent_plot <- ggplot(cvpdc_rent,
       aes(x = period,
           y = estimate,
           linetype = value,
           color = value)) + 
  geom_line(linewidth = 0.5) +
  geom_point_interactive(
    aes(data_id = tooltip,
        tooltip = tooltip),
    size = 1) +
  scale_y_continuous(labels = dollar_format(), limits = c(800,1150)) + 
  scale_linetype_manual(values = c(2,1)) +
  theme_hfv() +
  scale_color_hfv() +
  theme(legend.position = "bottom") + 
  labs(title = "Average market asking rent by quarter",
       subtitle = "All multifamily properties in CVPDC region",
       caption = "**Source:** CoStar Group, Inc.")

publish_plot(cvpdc_rent_plot)

```

In spite of the minute changes in average rent over the past few years, the rental vacancy rate took a major dip in the second half of 2020, reaching a low of 3 percent in Q3 2021. Rental vacancy has increased since the end of 2021, but has yet to reach pre-COVID-19 levels. 

```{r}
#| label: fig-vacancy
#| fig-cap: "Rental vacancy rate by quarter"

# Utilize CoStar properties search for Multi-Family. Filter by Market for Lynchburg MSA- VA Market. Then review Analytics and pull QUARTERLY Vacancy Rate for entire region. Do not bring in Forecast and set History to All.

# Download data into csv - name cvpdc_vacancy.csv

# Note the download date of data here: 

cvpdc_vacancy <- read_csv("data/cvpdc_vacancy.csv") |> 
  select(period, vacancy = overall_vacancy) |> 
  filter(!str_detect(period, "QTD")) |> 
  mutate(period = as.Date(as.yearqtr(period, format = "%Y Q%q"), frac = 1)) |> 
  mutate(year = year(period)) |> 
  filter(year >= 2016) |> 
  mutate(vacancy_label = percent(vacancy)) |> 
  mutate(tooltip = c(paste0("Date: ", period, "\n Vacancy rate: ", vacancy_label)))

cvpdc_vacancy_plot <- ggplot(cvpdc_vacancy,
       aes(x = period,
           y = vacancy)) +
  geom_line(linewidth = 1, color = "#0F1A4E") +
  geom_point_interactive(
    aes(data_id = tooltip,
        tooltip = tooltip),
    color = "#0F1A4E") +
  scale_y_continuous(labels = percent_format()) +
  theme_hfv() +
  scale_color_hfv() +
  #scale_color_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) +
  labs(title = "Rental vacancy rate by quarter",
       subtitle = "All multifamily properties in CVPDC region",
       caption = "**Source:** CoStar Group, Inc.")
  
publish_plot(cvpdc_vacancy_plot)

```
Throughout the region, there are 4,505 federally-assisted rental units located across 52 properties. 
```{r}
#| label: fig-nhpd-prop
#| eval: false
#| fig-cap: "Federally-assisted rental homes"

nhpd_properties <- read_csv("data/nhpd_properties.csv") |> 
  clean_names() |> 
  filter(property_status != "Inactive") |> 
  filter(grepl("amherst", city, ignore.case = TRUE) |
           grepl("bedford", city, ignore.case = TRUE) |
           grepl("campbell", city, ignore.case = TRUE) |
           grepl("appomattox", city, ignore.case = TRUE) |
           grepl("lynchburg", city, ignore.case = TRUE)) |> 
  select(total_active_subsidies, units = total_units, property_name, property_address, owner_type, target_tenant_type, city, longitude, latitude) |> 
  mutate(city = str_to_title(city))

cv_nhpd <- nhpd_properties
  # group_by(subsidy_name) |> 
  # summarise(units = sum(units))

cv_nhpd_plot <- ggplot(cv_nhpd,
       aes(x = property_name, 
           y = units,
           fill = property_name,
           data_id = units,
           tooltip = units)) +
  geom_col(position = "dodge") +
  geom_col_interactive(position = "dodge") +
  theme_hfv() +
  add_zero_line("y") +
  scale_fill_hfv() +
  labs(title = "Federally-assisted rental homes",
       subtitle = "Number of rental homes with active assistance by primary subsidy program",
       caption = "**Source:** National Housing Preservation Database (NHPD).") +
  theme(legend.position = "right") +
  scale_y_continuous(labels = number_format(big.mark = (",")))

# sum(cv_nhpd$units)

publish_plot(cv_nhpd_plot)
```
The bulk of assisted rental units are supported by Low-Income Housing Tax Credits
```{r}
#| label: fig-nhpd
#| fig-cap: "Federally-assisted rental homes by subsidy"

nhpd_subsidies <- read_csv("data/nhpd_subsidies.csv") |> 
  clean_names() |> 
  filter(subsidy_status != "Inactive") |> 
  filter(grepl("amherst", city, ignore.case = TRUE) |
           grepl("bedford", city, ignore.case = TRUE) |
           grepl("campbell", city, ignore.case = TRUE) |
           grepl("appomattox", city, ignore.case = TRUE) |
           grepl("lynchburg", city, ignore.case = TRUE)) |> 
  select(subsidy_name, units = assisted_units, property_name, owner_type, target_population, city, longitude, latitude) |> 
  mutate(city = str_to_title(city))

cv_nhpd <- nhpd_subsidies |> 
  group_by(subsidy_name) |> 
  summarise(units = sum(units))

cv_nhpd_plot <- ggplot(cv_nhpd,
       aes(x = subsidy_name, 
           y = units,
           fill = subsidy_name,
           data_id = units,
           tooltip = units)) +
  geom_col(position = "dodge") +
  geom_col_interactive(position = "dodge") +
  theme_hfv() +
  add_zero_line("y") +
  scale_fill_hfv() +
  labs(title = "Federally-assisted rental homes",
       subtitle = "Number of rental homes with active assistance by primary subsidy program",
       caption = "**Source:** National Housing Preservation Database (NHPD).") +
  theme(legend.position = "right") +
  scale_y_continuous(labels = number_format(big.mark = (",")))

# sum(cv_nhpd$units)

publish_plot(cv_nhpd_plot)
```


```{r}
#| label: fig-hcv-bar

cnty_code <- c("009", "011", "019", "031", "515", "680")

hcv <- read_rds("data/hcv.rds") %>% 
  st_transform(crs = 4326) %>% 
  clean_names() %>%
  subset(county %in% cnty_code)

hcv_group <- hcv |> 
  drop_na(hcv_public) |> 
  group_by(county) |> 
  summarise(estimate = sum(hcv_public)) |> 
  mutate(county_name = case_when(
    county == "009" ~ "Amherst County",
    county == "011" ~ "Appomattox County", 
    county == "031" ~ "Campbell County",
    county == "019" ~ "Bedford County",
    county == "680" ~ "Lynchburg city"
  )) |> 
  st_drop_geometry()
  
hcv_grp_plot <- ggplot(hcv_group,
       aes(x = county_name,
           y = estimate,
           fill = county_name)) +
  geom_col() +
  geom_col_interactive() +
  theme_hfv() +
  add_zero_line("y") +
  scale_fill_hfv() +
  labs(title = "Households with Housing Choice Vouchers",
       subtitle = "Number of renters using HCVs in private rental homes",
       caption = "**Source:** U.S. Department of Housing and Urban Development.")

publish_plot(hcv_grp_plot)
```

```{r}
#| label: fig-hcv
#| fig.cap: "Percent of renters with Housing Choice Vouchers by tract"

library(mapview)

hcv <- read_rds("data/hcv.rds") |> 
  clean_names() |> 
  subset(county %in% cnty_code)
  

if (knitr::is_html_output()) {
  
  mapview(hcv,
          zcol= "hcv_public_pct",
          legend = T,
          layer.name = "Percent renters with HCVs")
  
  } else {
    
  ggplot() +
    cv_basemap +
    layer_spatial(hcv, aes(fill = hcv_public_pct)) +
    scale_fill_gradient2(low = "#edf8b1", high = "#253494", mid = "#41b6c4",
                         midpoint = 10,
                         labels = label_percent(scale = 1)) +
    labs(title = "Percent of renters\nwith Housing Choice Vouchers by tract",
         fill = "Percent",
         caption = "Source: U.S. Department of Housing and Urban Development.") +
    #fixed_plot_aspect(ratio = 0.8) +
    theme(panel.background = element_blank(),
          axis.title = element_blank(),
          axis.ticks = element_blank(),
          axis.text = element_blank(),
          legend.key.height = unit(0.1, "npc"),
          plot.caption = element_text(hjust = 0))
    
  }

```


## Affordability

Housing affordability is most often defined by housing where a homeowner or tenant is spending no more than 30 percent of their income on their housing costs. Those households that spend more than 30 percent are considered housing cost-burdened. This metric is a standard measurement for housing affordability, especially in terms of state and federal programs.

In the region, there was a total of 23,419 cost-burdened households in 2021, fifty-three percent of which were renters. This 2021 estimates is a 12 percent decrease from 2010 (-3,123), when the total cost-burdened households was 26,542. At that time, 59 percent of those cost-burdened households were homeowners, indicating a major shift in who is cost-burdened in the region.

```{r}
#| label: cb-acs
#| eval: false

years <- 2010:2021

b25106_vars <- load_variables(2021, "acs5") |> 
  filter(str_sub(name, end = 6) %in% "B25106")

b25106_raw <- map_dfr(years, function(yr) {
  b25042_pull <- get_acs(
    geography = "county",
    state = "VA",
    table = "B25106",
    year = yr,
    survey = "acs5",
    cache_table = TRUE
  ) |> 
    mutate(year = yr)
})

b25106_raw <- b25106_raw |> 
  subset(GEOID %in% cv)

b25106_vars_cleaned <- b25106_vars |> 
  separate(label, into = c("est", "total", "tenure", "income", "cb"), sep = "!!") |> 
  select(variable = name, tenure, income, cb) |> 
  drop_na() |> 
  mutate(across(.fns = ~str_remove_all(.x, ":"))) |> 
  mutate(tenure = case_when(
    tenure == "Owner-occupied housing units" ~ "Homeowner",
    tenure == "Renter-occupied housing units" ~ "Renter"),
    cb = case_when(
      cb == "30 percent or more" ~ "Cost-burdened",
      TRUE ~ "Not cost-burdened"))

b25106_raw <- b25106_raw |> 
  right_join(b25106_vars_cleaned, by = "variable") |> 
  select(NAME, GEOID, year, tenure, income, cb, estimate)

b25106_data <- b25106_raw |> 
  mutate(NAME = str_remove_all(NAME, ", Virginia"),
         NAME = case_when(
           NAME == "Bedford city" ~ "Bedford County", # Aggregate Bedford City and Bedford County
           TRUE ~ NAME)) |>
  select(NAME, GEOID, year, tenure, income, cb, estimate) |> 
  group_by(NAME, GEOID, year, tenure, income, cb) |> 
  summarise(estimate = sum(estimate))


write_rds(b25106_data, "data/b25106_data.rds")

```

```{r}
#| label: fig-cb-tenure
#| fig-cap: "Cost-burdened households by tenure"

cv_cb <- read_rds("data/b25106_data.rds")

cv_cb <- cv_cb |> 
  group_by(year, tenure, cb) |> 
  summarise(estimate = sum(estimate)) |> 
  filter(cb == "Cost-burdened") |> 
  mutate(year_label = as.character(year))

cv_cb_plot <- ggplot(cv_cb,
       aes(x = year_label,
           y = estimate,
           fill = tenure,
           data_id = estimate,
           tooltip = label_number(big.mark = ",")(estimate))) +
  geom_col() +
  geom_col_interactive() +
  facet_grid(~tenure) +
  theme_hfv() +
  add_zero_line("y") +
  scale_fill_hfv() +
  scale_y_continuous(labels = label_number(big.mark = ",")) + 
  theme(axis.text.x = element_text(angle = 90, vjust = .2)) +
  labs(title = "Cost-burdened households by tenure",
       subtitle = "From 2010 to 2021",
       caption = "**Source:** U.S. Census Bureau, American Community Survey, 5-year estimates, Table B25106.")

publish_plot(cv_cb_plot)

```

```{r}
#| label: cb-data
#| eval: false

years <- 2012:2019

sumlev <- "050"

dir.create(glue("data/{sumlev}"))

walk(years, ~{
  url <- glue("https://www.huduser.gov/PORTAL/datasets/cp/{.x - 4}thru{.x}-{sumlev}-csv.zip")
  file <- basename(url)
  path <- file.path("data", sumlev, file)
  if (!file.exists(path)) {
    GET(url, write_disk(path, overwrite = TRUE), progress(type = "down"))
  }
  print(glue("Unzipping {.x}..."))
  unzip(path, exdir = file.path("data", sumlev, .x))
})

# Tables to get
tables <- c(7, 9, paste0(18, LETTERS[1:3]))

# Go through and write out the various tables
walk(tables, function(table) {
  mytable <- purrr::map_df(years, function(year) {
    # Identify the year-specific folder
    path <- file.path("data", "050", year)
    # Find the file - it may be buried so use recursive = TRUE
    file <- list.files(path, pattern = glue("Table{table}.csv"), recursive = TRUE)
    # Read in the file quietly
    raw <- read_csv(file.path(path, file), col_types = cols())
    # Clean it up
    cleaned <- raw |>
      clean_names() |>
      mutate(fips = substr(geoid, 8, 12)) |>
      separate(name, into = c("county", "state"), sep = ",") |>
      filter(st == "51") |>
      pivot_longer(starts_with("T"),
                   names_to = "code",
                   values_to = "value") |>
      mutate(id = str_extract(code, "\\d+$"),
             type = str_extract(code, "est|moe")) |>
      select(-code) |>
      pivot_wider(names_from = type, values_from = value) |>
      rename(Estimate = est, MOE = moe) |>
      mutate(Code := glue("T{table}_est{id}"),
             Year = year) |>
      select(Code, Year, Estimate, MOE, everything(), -id) |>
      mutate(fips = case_when(
        fips == "51515" ~ "51019",
        TRUE ~ fips
      )) |>
      mutate(county = case_when(
        county == "Bedford city" ~ "Bedford County",
        TRUE ~ county
      )) |>
      subset(fips %in% cv)
    
  
    # Account for different data dictionaries
    # Find the data dictionary in the appropriate folder
    dict_path <- list.files(path, pattern = "dictionary", recursive = TRUE, full.names = TRUE)
    
    # Read in the data dictionary and merge
    dict <- read_excel(dict_path,
                       sheet = glue("Table {table}"))
    cleaned_with_dict <- cleaned |>
      left_join(dict, by = c("Code" = "Column Name"))
    cleaned_with_dict
  })
  file_name <- glue("Table{table}_2012to2019.csv")
  message(glue("Writing file {file_name}..."))
  write_csv(mytable, glue("data/{file_name}"))
})

```

```{r}
#| label: cb7-clean
#| eval: false

cb_7 <- read_csv("data/Table7_2012to2019.csv") |> 
  clean_names() |> 
  filter(line_type == "Detail") |> 
  select(year, estimate, moe, county, fips, tenure, household_income, household_type, cost_burden) |> 
  mutate(tenure = case_when(
    tenure == "Owner occupied" ~ "Homeowner",
    tenure == "Renter occupied" ~ "Renter"
  )) |> 
  mutate(household_income = case_when(
    household_income == "household income is less than or equal to 30% of HAMFI" ~ "30% AMI or less",
    household_income == "household income is greater than 30% but less than or equal to 50% of HAMFI" ~ "31 to 50% AMI",
    household_income == "household income is greater than 50% but less than or equal to 80% of HAMFI" ~ "51 to 80% AMI",
    household_income == "household income is greater than 80% but less than or equal to 100% of HAMFI" ~ "81 to 100% AMI",
    household_income == "household income is greater than 100% of HAMFI" ~ "101% AMI or greater"
  )) |> 
  mutate(household_type = case_when(
    household_type == "household type is elderly family (2 persons, with either or both age 62 or over)" ~ "Elderly family",
    household_type == "household type is small family (2 persons, neither person 62 years or over, or 3 or 4 persons)" ~ "Small family",
    household_type == "household type is large family (5 or more persons)" ~ "Large family",
    household_type == "household type is elderly non-family" ~ "Elderly non-family",
    household_type == "other household type (non-elderly non-family)" ~ "Non-elderly non-family"
  ))  |> 
  mutate(cost_burden = case_when(
    cost_burden == "housing cost burden is less than or equal to 30%" ~ "Not cost-burdened",
    cost_burden == "housing cost burden is greater than 30% but less than or equal to 50%" ~ "Cost-burdened",
    cost_burden == "housing cost burden is greater than 50%" ~ "Severely cost-burdened",
    cost_burden == "housing cost burden not computed (household has no/negative income)" ~ "No or negative income"
  )) |> 
  mutate(cb_group = case_when(
    cost_burden == "Cost-burdened" ~ "Cost-burdened",
    cost_burden == "Severely cost-burdened" ~ "Cost-burdened",
    TRUE ~ cost_burden
  ))

write_rds(cb_7, "data/cb_7.rds")

```

```{r}
#| label: fig-cb-change
#| eval: false
#| fig-cap: "Change in cost-burdened households by tenure"

cb_7 <- read_rds("data/cb_7.rds")
  
cb_change <- cb_7 |> 
  filter(fips %in% cv,
         cb_group == "Cost-burdened") |> 
  group_by(year, tenure) |> 
  summarise(estimate = sum(estimate)) |> 
  group_by(tenure) |> 
  mutate(change = estimate - lag(estimate)) |> 
  drop_na() |> 
  mutate(run_diff = cumsum(change))
  
cb_diff <- ggplot(cb_change,
       aes(x = year, 
           y = run_diff, 
           fill = tenure,
           data_id = run_diff,
           tooltip = run_diff)) +
  geom_col(position = "dodge") +
  geom_col_interactive(position = "dodge", size = 2) +
  theme_hfv() +
  scale_fill_hfv() +
  scale_y_continuous(labels = label_comma()) +
  labs(title = "Cumulative change in cost-burdened households by tenure",
       subtitle = "2012 to 2019",
       fill = "Tenure",
       caption = "**Source:** U.S Department of Housing and Urban Development, Comprehensive Housing Affordability Strategy (CHAS), Table 7.") +
  theme(legend.position = "right") +
  add_zero_line(axis = "y")


if (knitr::is_html_output()) {
  
  girafe(ggobj = cb_diff,
         height_svg = 4) 
  
} else {
  
  cb_diff
  
  }


```

The U.S. Department of Housing and Urban Development receives custom tabulations of American Community Survey data from the U.S. Census Bureau. This data is used to demonstrate the breadth of housing needs across the country. This data lags behind ACS data by about two years, but it provides a snapshot of the different impacts of cost burden by area median income, household type, and race and ethnicity.

From 2012 to 2019, Cost burden in the region has generally been declining for higher income households, particularly those making above 50 percent AMI. But for households making 30 percent AMI or less, cost burden has increased rapidly between 2017 and 2018, going from 67 percent to 79 percent. Although there was an overall decline in cost-burdened households making 30 percent AMI or less between these years, the *share* grew significantly. 

```{r}
#| label: fig-cb-total
#| fig-cap: "Cost burden by household income"

cb_7 <- read_rds("data/cb_7.rds")
  
cbhh_region <- cb_7 |> 
  group_by(year, household_income, cb_group) |> 
  summarise(estimate = sum(estimate)) |> 
  group_by(year, household_income) |> 
  mutate(pct = estimate/sum(estimate)) |> 
  filter(cb_group == "Cost-burdened")

cbhh_region$household_income <- factor(cbhh_region$household_income,
                                       levels = c("30% AMI or less", "31 to 50% AMI",
                                                  "51 to 80% AMI", "81 to 100% AMI",
                                                  "101% AMI or greater"))

cbhh_region_plot <- ggplot(cbhh_region,
       aes(x = year, 
           y = pct, 
           fill = household_income,
           data_id = pct,
           tooltip = label_percent(accuracy = 0.1)(pct))) +
  geom_col(position = "stack") +
  geom_col_interactive(position = "stack", size = 2) +
  theme_hfv() +
  scale_fill_hfv() +
  facet_wrap(~household_income, nrow = 1) +
  scale_y_continuous(labels = label_percent()) +
  labs(title = "Cost burden by household income",
       subtitle = "Percent of households with cost burden by Area Median Income from 2012 to 2019",
       caption = "**Source:** U.S Department of Housing and Urban Development, Comprehensive Housing Affordability Strategy (CHAS), Table 7.") +
  add_zero_line("y") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5))

publish_plot(cbhh_region_plot)

```

Across all household types, cost burden has been declining from 2012 to 2019. However, nearly a third of elderly, non-family (31 percent) and non-elderly, non-family (37 percent) household types are cost-burdened. These households are typically individuals living alone or with other unrelated adults. Family households are less likely to be cost-burdened, but nearly one in five large and small family households were still cost-burdened in 2019.

```{r}
#| label: fig-hh-cb
#| fig-cap: "Cost burden by household type"

cb_7 <- read_rds("data/cb_7.rds")
  
cbhh_region <- cb_7 |> 
  group_by(year, household_type, cb_group) |> 
  summarise(estimate = sum(estimate)) |> 
  group_by(year, household_type) |> 
  mutate(pct = estimate/sum(estimate)) |> 
  filter(cb_group == "Cost-burdened") |> 
  #mutate(year = as.character(year)) |> 
  ungroup() |> 
  mutate(household_type = fct_reorder(fct(household_type), pct, mean, .desc = TRUE))

cb_hh_plot <- ggplot(cbhh_region,
       aes(x = year,
           y = pct,
           fill = household_type,
           data_id = pct,
           tooltip = label_percent(accuracy = 0.1)(pct))) +
  geom_col() +
  geom_col_interactive() +
  facet_wrap(~household_type, nrow = 1, labeller = label_wrap_gen(8)) +
  scale_y_continuous(labels = label_percent()) +
  theme_hfv() +
  add_zero_line("y") +
  scale_fill_hfv() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5),
        strip.text = element_text(size = 8)) +
  labs(title = "Cost burden by household type",
       subtitle = "Percent of households with cost burden by household type from 2012 to 2019",
       caption = "**Source:** U.S. Department of Housing and Urban Development, Comprehensive Housing Affordability Strategy (CHAS), Table 7.")

publish_plot(cb_hh_plot)

```

```{r}
#| label: cb9-clean
#| eval: false

cb_9 <- read_csv("data/Table9_2012to2019.csv") |> 
  clean_names() |> 
  filter(line_type == "Detail")  |> 
  mutate(tenure = case_when(
    tenure == "Owner occupied" ~ "Homeowner",
    tenure == "Renter occupied" ~ "Renter"
  )) |> 
  mutate(race = case_when(
    race_ethnicity == "White alone, non-Hispanic" ~ "White, non-Hispanic",
    race_ethnicity == "Black or African-American alone, non-Hispanic" ~ "Black",
    race_ethnicity == "Asian alone, non-Hispanic" ~ "Asian",
    race_ethnicity == "Hispanic, any race" ~ "Hispanic or Latino",
    TRUE ~ "Another race, including multiracial"
  ))   |> 
  mutate(cost_burden = case_when(
    cost_burden == "less than or equal to 30%" ~ "Not cost-burdened",
    cost_burden == "greater than 30% but less than or equal to 50%" ~ "Cost-burdened",
    cost_burden == "greater than 50%" ~ "Severely cost-burdened",
    cost_burden == "not computed (no/negative income)" ~ "No or negative income"
  )) |> 
  mutate(cb_group = case_when(
    cost_burden == "Cost-burdened" ~ "Cost-burdened",
    cost_burden == "Severely cost-burdened" ~ "Cost-burdened",
    TRUE ~ cost_burden
  )) |> 
  select(county, fips, year, race, cost_burden, cb_group, estimate, moe)

write_rds(cb_9, "data/cb_9.rds")

```

There has been a decline in the share of cost-burdened white and Asian households in the region between 2012 and 2019, while there has been little to no change in cost burden for other racial and ethnic groups. Although Hispanics in the region saw an initial decline in cost burden from 2012 to 2013, that decline was negated by 2019, when the percent of cost-burdened Hispanic households reached 37 percent, a two percentage point increase from 2012.

Disparities exist and have persisted in regards to race and ethnicity and cost burden. White households are less likely to be cost-burdened than any other racial or ethnic group in the region. As of 2019, 20 percent of white households were cost-burdened. The closest group were Asian households and yet they were still eight percentage points above their white counterparts. Black, Hispanic, and other racial groups (including multiracial households) experienced cost burden at least 15 percentage points above white households.

```{r}
#| label: fig-cb-race
#| fig-cap: "Cost burden by race and ethnicity"

cb_9 <- read_rds("data/cb_9.rds")

cv_cb9 <- cb_9 |> 
  group_by(year, race, cb_group) |> 
  summarise(estimate = sum(estimate)) |> 
  group_by(year, race) |> 
  mutate(pct = estimate/sum(estimate)) |> 
  filter(cb_group == "Cost-burdened") |> 
  group_by(race) |> 
  mutate(change = pct - lag(pct)) |> 
  #mutate(year = as.character(year))
  ungroup() |> 
  mutate(race = fct_reorder(fct(race), pct, mean, .desc = TRUE))

cv_cb9_plot <- ggplot(cv_cb9,
       aes(x = year, 
           y = pct,
           fill = race,
           data_id = pct,
           tooltip = label_percent(accuracy = 0.1)(pct))) +
  geom_col(position = "dodge") +
  geom_col_interactive() +
  facet_wrap(~race, nrow = 1, labeller = label_wrap_gen()) +
  scale_y_continuous(labels = label_percent()) +
  scale_fill_hfv() +
  theme_hfv() +
  add_zero_line("y") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5),
        strip.text = element_text(size = 8)) +
  labs(title = "Cost burden by race and ethnicity",
       subtitle = "Percent of households with cost burden by race and ethnicity from 2012 to 2019",
       caption = "**Source:** U.S. Department of Housing and Urban Development, Comprehensive Housing Affordability Strategy (CHAS), Table 9.")

publish_plot(cv_cb9_plot)

```



